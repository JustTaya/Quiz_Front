{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth-guard.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/close/close.component.ts","webpack:///src/app/close/close.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/navigation/navigation.component.ts","webpack:///src/app/navigation/navigation.component.html","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/service/loginService/authentication.service.ts","webpack:///src/app/service/registrationService/registration.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuardService","router","authenticationService","route","state","logIn","navigate","providedIn","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","canActivate","redirectTo","pathMatch","AppModule","declarations","providers","bootstrap","CloseComponent","LoginComponent","model","email","password","login","Login","authService","NavigationComponent","RegistrationComponent","service","formBuilder","submitted","registerForm","group","required","pattern","confirmPassword","validator","MustMatch","invalid","input","JSON","parse","stringify","value","register","postRegisterInfo","subscribe","res","console","log","error","alert","controls","controlName","matchingControlName","formGroup","control","matchingControl","errors","mustMatch","setErrors","AuthenticationService","http","BASE_URL","LOGIN_API_URL","post","resp","localStorage","setItem","removeItem","getItem","RegistrationService","REGISTRATION_URL","user","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from \"@angular/router\";\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authenticationService.logIn){\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'quiz-ng-app';\n\n  constructor() {}\n}\n","<div>\r\n  <app-navigation></app-navigation>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport {Router, RouterModule, Routes} from \"@angular/router\";\nimport { CloseComponent } from './close/close.component';\nimport {AuthGuardService} from \"./_helpers/auth-guard.service\";\n\nconst appRoutes: Routes = [\n  {\n    path:'registration',\n    component:RegistrationComponent\n  },\n  {\n    path:'login',\n    component:LoginComponent\n  },\n  {\n    path:'close', canActivate:[AuthGuardService],\n    component:CloseComponent\n  },\n  {\n    path: '',\n    redirectTo: '/',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    LoginComponent,\n    NavigationComponent,\n    CloseComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-close',\n  templateUrl: './close.component.html',\n  styleUrls: ['./close.component.css']\n})\nexport class CloseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Close content for unauthorized!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {User} from \"../models/user\";\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  model: User = {\n    id: null,\n    email: '',\n    password: ''\n  };\n\n\n  constructor(private authenticationService: AuthenticationService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  Login() {\n    this.authenticationService.login(this.model.email, this.model.password);\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3\">\n      <form name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && Login()\">\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Email address</label>\n          <input type=\"email\"\n                 class=\"form-control\"\n                 id=\"exampleInputEmail1\"\n                 aria-describedby=\"emailHelp\"\n                 name=\"login\"\n                 [(ngModel)]=\"model.email\"\n                 #email=\"ngModel\"\n                 [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\"\n\n          />\n\n          <div *ngIf=\"f.submitted && email.invalid\" class=\"invalid-input\">\n            <!-- individual validation errors -->\n            <div *ngIf=\"email.errors?.required\">Field is required</div>\n            <div *ngIf=\"email.errors?.email\">Field is not a valid email</div>\n          </div>\n\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputPassword1\">Password</label>\n          <input type=\"password\"\n                 class=\"form-control\"\n                 id=\"exampleInputPassword1\"\n                 name=\"password\"\n                 [(ngModel)]=\"model.password\"\n          />\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor(public authService: AuthenticationService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <a class=\"nav-link\" routerLink=\"/registration\">Registration </a>\n  <a class=\"nav-link\" routerLink=\"/login\" *ngIf=\"!authService.logIn\">LogIn</a>\n  <a class =\"nav-link\" routerLink=\"\" (click)=\"authService.logout()\" *ngIf=\"authService.logIn\">Logout</a>\n  <a class=\"nav-link\" routerLink=\"/close\" routerLinkActive=\"active\" *ngIf=\"authService.logIn\">close</a>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {RegistrationService} from \"../service/registrationService/registration.service\";\nimport {User} from \"../models/user\";\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n\n  model:User = {\n    id:null,\n    email:'',\n    password:''\n  };\n\n\n\n  constructor(\n    public service : RegistrationService,\n    public authService: AuthenticationService,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\")]],\n      confirmPassword: ['', Validators.required]\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.registerForm.invalid) {\n      return;\n    }\n    let input: User = JSON.parse(JSON.stringify(this.registerForm.value));\n    this.model.email = input.email;\n    this.model.password = input.password;\n    this.register();\n  }\n\n\n  register(): void{\n    this.service.postRegisterInfo(this.model).subscribe(\n      res =>{\n        console.log(res);\n      },\n      error => {\n        alert(\"An error has occurred on registration process\");\n      }\n    );\n  }\n\n  get f() { return this.registerForm.controls; }\n}\n\nexport function MustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: FormGroup) => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n      return;\n    }\n\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({ mustMatch: true });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  }\n}\n\n","\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3\">\n\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!authService.logIn\">\n        <div class=\"form-group\">\n          <label>Email</label>\n          <input type=\"text\"\n                 formControlName=\"email\"\n                 class=\"form-control\"\n\n                 [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n                 />\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label>Password</label>\n          <input type=\"password\"\n                 formControlName=\"password\"\n                 class=\"form-control\"\n\n                 [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n                 required/>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.pattern\">Must contain one number and one uppercase and lowercase letter, and at least 8 or more characters</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label>Confirm Password</label>\n          <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n          <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n            <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary\">Register</button>\n        </div>\n      </form>\n      <div *ngIf=\"authService.logIn\">\n        <p>For registration you must be not logged in</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  //private BASE_URL = \"http://localhost:8080\";\n  private BASE_URL = \"https://quiz-api-netcracker.herokuapp.com\";\n  private LOGIN_API_URL = `${this.BASE_URL}\\\\auth\\\\login`;\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  login(email: string, password: string) {\n    this.http.post(this.LOGIN_API_URL, {email: email,password: password})\n      .subscribe((resp : any) => {\n\n        this.router.navigate(['/']);\n        localStorage.setItem('auth_token', resp);\n      },\n        error => {\n        console.log(error);\n        });\n  }\n\n\n  logout() {\n    localStorage.removeItem('auth_token');\n  }\n\n  public get logIn(): boolean {\n    return (localStorage.getItem('auth_token') != null);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {User} from \"../../models/user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n  //private BASE_URL = \"http://localhost:8080\";\n  private BASE_URL = \"https://quiz-api-netcracker.herokuapp.com\";\n  private REGISTRATION_URL = `${this.BASE_URL}\\\\auth\\\\register`;\n\n  constructor(private http: HttpClient) { }\n\n  postRegisterInfo(user : User) : Observable<User> {\n    return this.http.post<User>(this.REGISTRATION_URL, user);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}