{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/auth-guard.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/close/close.component.ts","./src/app/close/close.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/service/loginService/authentication.service.ts","./src/app/service/registrationService/registration.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAQpC,MAAM,gBAAgB;IAE3B,YACU,MAAc,EACd,qBAA4C;QAD5C,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;IAClD,CAAC;IAEL,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACnE,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAC;YACnC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IACf,CAAC;;gFAbU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAQnC,MAAM,YAAY;IAGvB;QAFA,UAAK,GAAG,aAAa,CAAC;IAEP,CAAC;;wEAHL,YAAY;4FAAZ,YAAY;QCRzB,sEACE;QAAA,4EAAiC;QACjC,2EAA+B;QACjC,4DAAM;;6FDKO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AAEiB;AACV;AACwB;AACrB;AACe;AACX;AACJ;AACM;;;AAE/D,MAAM,SAAS,GAAW;IACxB;QACE,IAAI,EAAC,cAAc;QACnB,SAAS,EAAC,0FAAqB;KAChC;IACD;QACE,IAAI,EAAC,OAAO;QACZ,SAAS,EAAC,qEAAc;KACzB;IACD;QACE,IAAI,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,6EAAgB,CAAC;QAC5C,SAAS,EAAC,sEAAc;KACzB;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,GAAG;QACf,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;AAqBK,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YARJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;YACX,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;YAC/B,kEAAmB;SACpB;mIAIU,SAAS,mBAjBlB,2DAAY;QACZ,0FAAqB;QACrB,qEAAc;QACd,oFAAmB;QACnB,sEAAc,aAGd,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW,gEAEX,kEAAmB;6FAKV,SAAS;cAnBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,0FAAqB;oBACrB,qEAAc;oBACd,oFAAmB;oBACnB,sEAAc;iBACf;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,0DAAW;oBACX,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;oBAC/B,kEAAmB;iBACpB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrDD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,oEAAG;QAAA,0FAA+B;QAAA,4DAAI;;6FDOzB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICmBtC,sEAAoC;IAAA,4EAAiB;IAAA,4DAAM;;;IAC3D,sEAAiC;IAAA,qFAA0B;IAAA,4DAAM;;;IAHnE,0EACE;IACA,kHAAoC;IACpC,kHAAiC;IACnC,4DAAM;;;;IAFC,0DAA8B;IAA9B,mHAA8B;IAC9B,0DAA2B;IAA3B,gHAA2B;;;ADVrC,MAAM,cAAc;IAQzB,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;QAPhE,UAAK,GAAS;YACZ,EAAE,EAAE,IAAI;YACR,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;IAIF,CAAC;IAED,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC1E,CAAC;;4EAhBU,cAAc;8FAAd,cAAc;;QCV3B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,6EACE;QAD4B,2SAA4B,WAAO,IAAC;QAChE,yEACE;QAAA,2EAAgC;QAAA,wEAAa;QAAA,4DAAQ;QACrD,8EAWA;QANO,uLAAyB;QALhC,4DAWA;QAAA,4GACE;QAKJ,4DAAM;QACN,0EACE;QAAA,6EAAmC;QAAA,oEAAQ;QAAA,4DAAQ;QACnD,6EAMF;QAFS,2LAA4B;QAJnC,4DAMF;QAAA,4DAAM;QACN,8EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAC/D,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;;;;QA1BW,0DAAyB;QAAzB,oFAAyB;QAM3B,0DAAoC;QAApC,gGAAoC;QAalC,0DAA4B;QAA5B,uFAA4B;;6FDpBhC,cAAc;cAN1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICEhD,uEAAmE;IAAA,gEAAK;IAAA,4DAAI;;;;IAC5E,uEAA4F;IAAzD,4RAAS,4BAAoB,IAAC;IAA2B,iEAAM;IAAA,4DAAI;;;IACtG,uEAA4F;IAAA,gEAAK;IAAA,4DAAI;;ADIhG,MAAM,mBAAmB;IAE9B,YAAmB,WAAkC;QAAlC,gBAAW,GAAX,WAAW,CAAuB;IAAI,CAAC;IAE1D,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCRhC,sEACE;QAAA,uEAA+C;QAAA,wEAAa;QAAA,4DAAI;QAChE,2GAAmE;QACnE,2GAA4F;QAC5F,2GAA4F;QAC9F,4DAAM;;QAHoC,0DAA0B;QAA1B,wFAA0B;QACA,0DAAyB;QAAzB,uFAAyB;QACzB,0DAAyB;QAAzB,uFAAyB;;6FDIhF,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIgB;;;;;;;ICYtD,sEAAqC;IAAA,4EAAiB;IAAA,4DAAM;;;IAC5D,sEAAkC;IAAA,8FAAmC;IAAA,4DAAM;;;IAF7E,0EACE;IAAA,8HAAqC;IACrC,8HAAkC;IACpC,4DAAM;;;IAFC,0DAA+B;IAA/B,gGAA+B;IAC/B,0DAA4B;IAA5B,6FAA4B;;;IAYjC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IAClE,sEAAuC;IAAA,4JAAiG;IAAA,4DAAM;;;IAFhJ,0EACE;IAAA,+HAAwC;IACxC,+HAAuC;IACzC,4DAAM;;;IAFC,0DAAkC;IAAlC,mGAAkC;IAClC,0DAAiC;IAAjC,kGAAiC;;;IAOtC,sEAA+C;IAAA,uFAA4B;IAAA,4DAAM;;;IACjF,sEAAgD;IAAA,+EAAoB;IAAA,4DAAM;;;IAF5E,0EACE;IAAA,+HAA+C;IAC/C,+HAAgD;IAClD,4DAAM;;;IAFC,0DAAyC;IAAzC,0GAAyC;IACzC,0DAA0C;IAA1C,2GAA0C;;;;;IAhCrD,0EACE;IAD+B,gUAAuB;IACtD,yEACE;IAAA,wEAAO;IAAA,gEAAK;IAAA,4DAAQ;IACpB,sEAMA;IAAA,wHACE;IAGJ,4DAAM;IACN,yEACE;IAAA,wEAAO;IAAA,mEAAQ;IAAA,4DAAQ;IACvB,sEAMA;IAAA,0HACE;IAGJ,4DAAM;IACN,0EACE;IAAA,yEAAO;IAAA,4EAAgB;IAAA,4DAAQ;IAC/B,wEACA;IAAA,0HACE;IAGJ,4DAAM;IACN,0EACE;IAAA,8EAAgC;IAAA,oEAAQ;IAAA,4DAAS;IACnD,4DAAM;IACR,4DAAO;;;IAtCD,0FAA0B;IAOrB,0DAAyD;IAAzD,qLAAyD;IAE3D,0DAAmC;IAAnC,2GAAmC;IAWjC,0DAA4D;IAA5D,wLAA4D;IAE9D,0DAAsC;IAAtC,8GAAsC;IAOmC,0DAAmE;IAAnE,gMAAmE;IAC5I,0DAA6C;IAA7C,qHAA6C;;;IAStD,sEACE;IAAA,oEAAG;IAAA,qGAA0C;IAAA,4DAAI;IACnD,4DAAM;;ADpCL,MAAM,qBAAqB;IAYhC,YACS,OAA6B,EAC7B,WAAkC,EACjC,WAAwB;QAFzB,YAAO,GAAP,OAAO,CAAsB;QAC7B,gBAAW,GAAX,WAAW,CAAuB;QACjC,gBAAW,GAAX,WAAW,CAAa;QAblC,cAAS,GAAG,KAAK,CAAC;QAElB,UAAK,GAAQ;YACX,EAAE,EAAC,IAAI;YACP,KAAK,EAAC,EAAE;YACR,QAAQ,EAAC,EAAE;SACZ,CAAC;IAOoC,CAAC;IAEvC,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,sCAAsC,CAAC,CAAC,CAAC;YACjG,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3C,EAAE;YACD,SAAS,EAAE,SAAS,CAAC,UAAU,EAAE,iBAAiB,CAAC;SACpD,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC7B,OAAO;SACR;QACD,IAAI,KAAK,GAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QACrC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACjD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,KAAK,CAAC,+CAA+C,CAAC,CAAC;QACzD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;;0FAnDnC,qBAAqB;qGAArB,qBAAqB;QCTlC,yEACE;QAAA,yEACE;QAAA,yEAEE;QAAA,qHACE;QAsCF,iHACE;QAEJ,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA5CyD,0DAA0B;QAA1B,wFAA0B;QAuC9E,0DAAyB;QAAzB,uFAAyB;;6FDlCvB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;AAuDM,SAAS,SAAS,CAAC,WAAmB,EAAE,mBAA2B;IACxE,OAAO,CAAC,SAAoB,EAAE,EAAE;QAC9B,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAChD,MAAM,eAAe,GAAG,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QAEhE,IAAI,eAAe,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,EAAE;YAC/D,OAAO;SACR;QAED,IAAI,OAAO,CAAC,KAAK,KAAK,eAAe,CAAC,KAAK,EAAE;YAC3C,eAAe,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;SAChD;aAAM;YACL,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACjC;IACH,CAAC;AACH,CAAC;;;;;;;;;;;;;AEhFD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAOpC,MAAM,qBAAqB;IAKhC,YAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJ5D,6CAA6C;QACrC,aAAQ,GAAG,2CAA2C,CAAC;QACvD,kBAAa,GAAG,GAAG,IAAI,CAAC,QAAQ,eAAe,CAAC;IAEQ,CAAC;IAEjE,KAAK,CAAC,KAAa,EAAE,QAAgB;QACnC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC;aAClE,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;YAExB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC,EACC,KAAK,CAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAGD,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;IACxC,CAAC;IAED,IAAW,KAAK;QACd,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC;IACtD,CAAC;;0FA1BU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,mBAAmB;IAK9B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,6CAA6C;QACrC,aAAQ,GAAG,2CAA2C,CAAC;QACvD,qBAAgB,GAAG,GAAG,IAAI,CAAC,QAAQ,kBAAkB,CAAC;IAEtB,CAAC;IAEzC,gBAAgB,CAAC,IAAW;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;;sFATU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from \"@angular/router\";\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authenticationService.logIn){\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'quiz-ng-app';\n\n  constructor() {}\n}\n","<div>\r\n  <app-navigation></app-navigation>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport {Router, RouterModule, Routes} from \"@angular/router\";\nimport { CloseComponent } from './close/close.component';\nimport {AuthGuardService} from \"./_helpers/auth-guard.service\";\n\nconst appRoutes: Routes = [\n  {\n    path:'registration',\n    component:RegistrationComponent\n  },\n  {\n    path:'login',\n    component:LoginComponent\n  },\n  {\n    path:'close', canActivate:[AuthGuardService],\n    component:CloseComponent\n  },\n  {\n    path: '',\n    redirectTo: '/',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    LoginComponent,\n    NavigationComponent,\n    CloseComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-close',\n  templateUrl: './close.component.html',\n  styleUrls: ['./close.component.css']\n})\nexport class CloseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Close content for unauthorized!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {User} from \"../models/user\";\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  model: User = {\n    id: null,\n    email: '',\n    password: ''\n  };\n\n\n  constructor(private authenticationService: AuthenticationService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  Login() {\n    this.authenticationService.login(this.model.email, this.model.password);\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3\">\n      <form name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && Login()\">\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Email address</label>\n          <input type=\"email\"\n                 class=\"form-control\"\n                 id=\"exampleInputEmail1\"\n                 aria-describedby=\"emailHelp\"\n                 name=\"login\"\n                 [(ngModel)]=\"model.email\"\n                 #email=\"ngModel\"\n                 [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\"\n\n          />\n\n          <div *ngIf=\"f.submitted && email.invalid\" class=\"invalid-input\">\n            <!-- individual validation errors -->\n            <div *ngIf=\"email.errors?.required\">Field is required</div>\n            <div *ngIf=\"email.errors?.email\">Field is not a valid email</div>\n          </div>\n\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputPassword1\">Password</label>\n          <input type=\"password\"\n                 class=\"form-control\"\n                 id=\"exampleInputPassword1\"\n                 name=\"password\"\n                 [(ngModel)]=\"model.password\"\n          />\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor(public authService: AuthenticationService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <a class=\"nav-link\" routerLink=\"/registration\">Registration </a>\n  <a class=\"nav-link\" routerLink=\"/login\" *ngIf=\"!authService.logIn\">LogIn</a>\n  <a class =\"nav-link\" routerLink=\"\" (click)=\"authService.logout()\" *ngIf=\"authService.logIn\">Logout</a>\n  <a class=\"nav-link\" routerLink=\"/close\" routerLinkActive=\"active\" *ngIf=\"authService.logIn\">close</a>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {RegistrationService} from \"../service/registrationService/registration.service\";\nimport {User} from \"../models/user\";\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n\n  model:User = {\n    id:null,\n    email:'',\n    password:''\n  };\n\n\n\n  constructor(\n    public service : RegistrationService,\n    public authService: AuthenticationService,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\")]],\n      confirmPassword: ['', Validators.required]\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.registerForm.invalid) {\n      return;\n    }\n    let input: User = JSON.parse(JSON.stringify(this.registerForm.value));\n    this.model.email = input.email;\n    this.model.password = input.password;\n    this.register();\n  }\n\n\n  register(): void{\n    this.service.postRegisterInfo(this.model).subscribe(\n      res =>{\n        console.log(res);\n      },\n      error => {\n        alert(\"An error has occurred on registration process\");\n      }\n    );\n  }\n\n  get f() { return this.registerForm.controls; }\n}\n\nexport function MustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: FormGroup) => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n      return;\n    }\n\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({ mustMatch: true });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  }\n}\n\n","\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3\">\n\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!authService.logIn\">\n        <div class=\"form-group\">\n          <label>Email</label>\n          <input type=\"text\"\n                 formControlName=\"email\"\n                 class=\"form-control\"\n\n                 [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n                 />\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label>Password</label>\n          <input type=\"password\"\n                 formControlName=\"password\"\n                 class=\"form-control\"\n\n                 [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n                 required/>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.pattern\">Must contain one number and one uppercase and lowercase letter, and at least 8 or more characters</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label>Confirm Password</label>\n          <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n          <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n            <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary\">Register</button>\n        </div>\n      </form>\n      <div *ngIf=\"authService.logIn\">\n        <p>For registration you must be not logged in</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  //private BASE_URL = \"http://localhost:8080\";\n  private BASE_URL = \"https://quiz-api-netcracker.herokuapp.com\";\n  private LOGIN_API_URL = `${this.BASE_URL}\\\\auth\\\\login`;\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  login(email: string, password: string) {\n    this.http.post(this.LOGIN_API_URL, {email: email,password: password})\n      .subscribe((resp : any) => {\n\n        this.router.navigate(['/']);\n        localStorage.setItem('auth_token', resp);\n      },\n        error => {\n        console.log(error);\n        });\n  }\n\n\n  logout() {\n    localStorage.removeItem('auth_token');\n  }\n\n  public get logIn(): boolean {\n    return (localStorage.getItem('auth_token') != null);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {User} from \"../../models/user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n  //private BASE_URL = \"http://localhost:8080\";\n  private BASE_URL = \"https://quiz-api-netcracker.herokuapp.com\";\n  private REGISTRATION_URL = `${this.BASE_URL}\\\\auth\\\\register`;\n\n  constructor(private http: HttpClient) { }\n\n  postRegisterInfo(user : User) : Observable<User> {\n    return this.http.post<User>(this.REGISTRATION_URL, user);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}