{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/auth-guard.service.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/add-questions/add-questions.component.ts","./src/app/add-questions/add-questions.component.html","./src/app/answer/answer.component.ts","./src/app/answer/answer.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/boolean-answer/boolean-answer.component.ts","./src/app/boolean-answer/boolean-answer.component.html","./src/app/dashboard/achievements-list/achievements-list.component.ts","./src/app/dashboard/achievements-list/achievements-list.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/rating-list/rating-list.component.ts","./src/app/dashboard/rating-list/rating-list.component.html","./src/app/image-upload/image-upload.component.ts","./src/app/image-upload/image-upload.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/question.model.ts","./src/app/models/quiz.model.ts","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/new-quiz/new-quiz.component.ts","./src/app/new-quiz/new-quiz.component.html","./src/app/optional-answer/optional-answer.component.ts","./src/app/optional-answer/optional-answer.component.html","./src/app/profile/change-password/change-password.component.ts","./src/app/profile/change-password/change-password.component.html","./src/app/profile/favorite/favorite.component.ts","./src/app/profile/favorite/favorite.component.html","./src/app/profile/friends/friends.component.ts","./src/app/profile/friends/friends.component.html","./src/app/profile/left-bar/left-bar.component.ts","./src/app/profile/left-bar/left-bar.component.html","./src/app/profile/my-quizzes/my-quizzes.component.ts","./src/app/profile/my-quizzes/my-quizzes.component.html","./src/app/profile/profile-navigation/profile-navigation.component.ts","./src/app/profile/profile-navigation/profile-navigation.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/profile/user-information/user-information.component.ts","./src/app/profile/user-information/user-information.component.html","./src/app/question/question.component.ts","./src/app/question/question.component.html","./src/app/quiz/quiz-dialog/quiz-dialog.component.ts","./src/app/quiz/quiz-dialog/quiz-dialog.component.html","./src/app/quiz/quiz.component.ts","./src/app/quiz/quiz.component.html","./src/app/quizzes-page/quizzes-page.component.ts","./src/app/quizzes-page/quizzes-page.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/sequence-answer/sequence-answer.component.ts","./src/app/sequence-answer/sequence-answer.component.html","./src/app/service/achievementsService/achievements.service.ts","./src/app/service/answerService/answer.service.ts","./src/app/service/categoryService/category.service.ts","./src/app/service/current-user.service.ts","./src/app/service/dashboardService/dashboard.service.ts","./src/app/service/loginService/authentication.service.ts","./src/app/service/newQuizService/new-quiz.service.ts","./src/app/service/profileService/profile.service.ts","./src/app/service/profileService/share-id.service.ts","./src/app/service/questionService/question.service.ts","./src/app/service/quizService/quiz.service.ts","./src/app/service/ratingService/rating.service.ts","./src/app/service/registrationService/registration.service.ts","./src/app/service/tagService/tag.service.ts","./src/app/string-answer/string-answer.component.ts","./src/app/string-answer/string-answer.component.html","./src/app/submitted-quiz/submitted-quiz.component.ts","./src/app/submitted-quiz/submitted-quiz.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from \"@angular/router\";\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authenticationService.logIn){\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor() {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    if (localStorage.getItem('currentUser') == null){\r\n      return next.handle(request);\r\n    }\r\n\r\n    const resultRequest = request.clone({\r\n      headers: request.headers.append('authorization', `${JSON.parse(localStorage.getItem('currentUser')).token}`)});\r\n    return next.handle(resultRequest);\r\n  }\r\n}\r\n","import { defaultIfEmpty, mergeMap } from 'rxjs/operators';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { QuestionComponent } from './../question/question.component';\r\nimport { Component, OnInit, ViewChildren, QueryList } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Question, QuestionType } from '../models/question.model';\r\n\r\n@Component({\r\n  selector: 'app-add-questions',\r\n  templateUrl: './add-questions.component.html',\r\n  styleUrls: ['./add-questions.component.css']\r\n})\r\nexport class AddQuestionsComponent implements OnInit {\r\n  @ViewChildren(QuestionComponent) questionComponents!: QueryList<QuestionComponent>;\r\n\r\n  quizId: number;\r\n  name: string;\r\n\r\n  questions: Question[] = [];\r\n\r\n  constructor(private router: Router) {\r\n    let state = router.getCurrentNavigation().extras.state;\r\n    this.quizId = state.id;\r\n    this.name = state.name;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.questions.push({\r\n      id: null,\r\n      quizId: this.quizId,\r\n      type: 'OPTION',\r\n      text: '',\r\n      active: true\r\n    });\r\n  }\r\n\r\n  addQuestion() {\r\n    this.questions.push({\r\n      id: null,\r\n      quizId: this.quizId,\r\n      type: 'OPTION',\r\n      text: '',\r\n      active: true\r\n    });\r\n  }\r\n\r\n  removeQuestion(i: number) {\r\n    if (this.questions.length > 1) {\r\n      this.questions.splice(i, 1);\r\n    }\r\n    else {\r\n      alert(\"Can't delete the only one question\");\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    let isValid = true;\r\n\r\n    this.questionComponents.toArray().forEach(\r\n      value => {\r\n        if (!value.isValid()) {\r\n          isValid = false;\r\n        }\r\n      }\r\n    );\r\n\r\n    if (isValid) {\r\n      let observableBatch: Observable<any>[] = [];\r\n\r\n      console.log(\"submit\")\r\n      this.questionComponents.toArray().forEach(el => {\r\n        el.quizId = this.quizId;\r\n        observableBatch.push(el.save());\r\n      })\r\n\r\n      forkJoin(observableBatch).subscribe(\r\n        () => {\r\n          console.log('Quiz added');\r\n          this.router.navigateByUrl('/submitted_quiz');\r\n        },\r\n        err => {\r\n          alert(err);\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      alert(\"Error. Check your questions\");\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <mat-card fxLayout=\"column\" fxLayoutAlign=\"start\">\r\n        <mat-card-title>\r\n            <h2>Quiz: {{name}}</h2>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n            <mat-accordion *ngFor=\"let question of questions; let i=index\">\r\n                <mat-expansion-panel>\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\r\n                            <h3>Question</h3>\r\n                        </mat-panel-title>\r\n                        <mat-panel-description>\r\n                            Add info for a question\r\n                        </mat-panel-description>\r\n                        <button mat-raised-button class=\"delete-button\" (click)=\"removeQuestion(i)\" color=\"warn\">\r\n                            Delete\r\n                        </button>\r\n                    </mat-expansion-panel-header>\r\n                    <app-question></app-question>\r\n                </mat-expansion-panel>\r\n            </mat-accordion>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n                <button mat-fab (click)=\"addQuestion()\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n            </div>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button class=\"fab\" type=\"submit\" (click)=\"onSubmit()\">Submit</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>","import { Observable, forkJoin } from 'rxjs';\r\nimport { Answer } from './../models/answer.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ValidatorFn, ValidationErrors, FormArray } from '@angular/forms';\r\nimport { mergeMap, map, defaultIfEmpty } from 'rxjs/operators';\r\nimport { AnswerService } from '../service/answerService/answer.service';\r\n\r\n@Component({\r\n  selector: 'app-answer',\r\n  templateUrl: './answer.component.html',\r\n  styleUrls: ['./answer.component.css']\r\n})\r\nexport class AnswerComponent implements OnInit {\r\n  submitted: boolean = false;\r\n\r\n  answer: Answer[] = [];\r\n  images: File[] = [];\r\n\r\n  questionId: number;\r\n\r\n  constructor(private answerService: AnswerService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  isValid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  save(): Observable<any> {\r\n    this.submitted = true;\r\n    this.getData();\r\n    this.getImages();\r\n\r\n    return this.saveAnswers().pipe(\r\n      mergeMap(\r\n        () => this.saveImages()\r\n      ),\r\n      defaultIfEmpty()\r\n    );\r\n\r\n  }\r\n\r\n  saveAnswers(): Observable<any> {\r\n    let observableBatch = [];\r\n\r\n    this.answer.forEach(\r\n      (item) => {\r\n        if (item.text != null && item.text !== \"\") {\r\n          observableBatch.push(\r\n            this.answerService.postAnswer(item).pipe(map(response => item.id = response.id))\r\n          );\r\n        }\r\n      }\r\n    );\r\n\r\n    return forkJoin(observableBatch);\r\n  }\r\n\r\n  saveImages(): Observable<any> {\r\n    let observableBatch = [];\r\n\r\n    this.answer.forEach(\r\n      (item, index) => {\r\n        if (item.text != null && item.text !== \"\" && this.images[index] != null) {\r\n          observableBatch.push(\r\n            this.answerService.updateImage(item.id, this.images[index])\r\n          );\r\n        }\r\n      }\r\n    );\r\n\r\n    return forkJoin(observableBatch);\r\n  }\r\n\r\n  getData(): void {\r\n\r\n  }\r\n\r\n  getImages(): void {\r\n\r\n  }\r\n\r\n}\r\n\r\nexport function SequenceValidator(): ValidatorFn {\r\n  return (formArray: FormArray): ValidationErrors => {\r\n    for (var _i = 1; _i < formArray.controls.length; _i++) {\r\n      let previous = formArray.controls[_i - 1];\r\n      let current = formArray.controls[_i];\r\n\r\n      if (current.get('text').value !== '' && previous.get('text').value === '') {\r\n        previous.setErrors({ mustExist: true });\r\n        return;\r\n      } else {\r\n        previous.setErrors(null);\r\n      }\r\n    }\r\n    return;\r\n  }\r\n}","<p>\r\n  answer works!\r\n</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n   imports: [\r\n      RouterModule.forRoot(routes)\r\n   ],\r\n   exports: [\r\n      RouterModule\r\n   ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'quiz-ng-app';\r\n\r\n  constructor() {}\r\n}\r\n","<div>\r\n  <app-navigation></app-navigation>\r\n  <router-outlet></router-outlet>\r\n</div>","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {HTTP_INTERCEPTORS,} from '@angular/common/http';\r\nimport {QuizComponent} from './quiz/quiz.component';\r\n\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {ProfileNavigationComponent} from './profile/profile-navigation/profile-navigation.component';\r\nimport {LeftBarComponent} from './profile/left-bar/left-bar.component';\r\nimport {UserInformationComponent} from './profile/user-information/user-information.component';\r\nimport {JwtInterceptor} from './_helpers/jwt.interceptor';\r\nimport {FriendsComponent} from './profile/friends/friends.component';\r\nimport {MyQuizzesComponent} from './profile/my-quizzes/my-quizzes.component';\r\nimport {FavoriteComponent} from './profile/favorite/favorite.component';\r\nimport {ChangePasswordComponent} from './profile/change-password/change-password.component';\r\n\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {NavigationComponent} from './navigation/navigation.component';\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {AuthGuardService} from \"./_helpers/auth-guard.service\";\r\nimport {QuestionComponent} from './question/question.component';\r\nimport {OptionalAnswerComponent} from './optional-answer/optional-answer.component';\r\nimport {BooleanAnswerComponent} from './boolean-answer/boolean-answer.component';\r\nimport {StringAnswerComponent} from './string-answer/string-answer.component';\r\nimport {SequenceAnswerComponent} from './sequence-answer/sequence-answer.component';\r\nimport {ImageUploadComponent} from './image-upload/image-upload.component';\r\nimport {AnswerComponent} from './answer/answer.component';\r\nimport {NewQuizComponent} from './new-quiz/new-quiz.component';\r\nimport {AddQuestionsComponent} from './add-questions/add-questions.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\nimport {MatExpansionModule} from '@angular/material/expansion'\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {SubmittedQuizComponent} from './submitted-quiz/submitted-quiz.component';\r\nimport {FlexModule} from \"@angular/flex-layout\";\r\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\r\nimport {MatSortModule} from \"@angular/material/sort\";\r\nimport {MatRadioModule} from \"@angular/material/radio\";\r\nimport {QuizDialogComponent} from './quiz/quiz-dialog/quiz-dialog.component';\r\nimport {MatTabsModule} from \"@angular/material/tabs\";\r\n\r\nimport {MatTableModule} from \"@angular/material/table\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {LayoutModule} from '@angular/cdk/layout';\r\n\r\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\r\nimport {AchievementsListComponent} from './dashboard/achievements-list/achievements-list.component';\r\nimport {RatingListComponent} from './dashboard/rating-list/rating-list.component';\r\nimport {QuizzesPageComponent} from \"./quizzes-page/quizzes-page.component\";\r\n\r\nconst profileRoutes: Routes = [\r\n  {\r\n    path: 'profinfo',\r\n    component: UserInformationComponent,\r\n    outlet: 'profilenav'\r\n  },\r\n  {\r\n    path: 'friends',\r\n    component: FriendsComponent,\r\n    outlet: 'profilenav'\r\n  },\r\n  {\r\n    path: 'mygames',\r\n    component: MyQuizzesComponent,\r\n    outlet: 'profilenav'\r\n  },\r\n  {\r\n    path: 'favorite',\r\n    component: FavoriteComponent,\r\n    outlet: 'profilenav'\r\n  },\r\n  {\r\n    path: 'changePass',\r\n    component: ChangePasswordComponent,\r\n    outlet: 'profilenav'\r\n  }\r\n];\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'registration',\r\n    component: RegistrationComponent\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'profile/:id', canActivate: [AuthGuardService],\r\n    component: ProfileComponent,\r\n    children: profileRoutes,\r\n  },\r\n  {\r\n    path: 'friends', canActivate: [AuthGuardService],\r\n    component: FriendsComponent\r\n  },\r\n  {\r\n    path: 'quizzes/:id',\r\n    component: QuizComponent\r\n  },\r\n  {\r\n    path: 'quiz',\r\n    component: QuizComponent\r\n  },\r\n  {\r\n    path: 'friends', canActivate: [AuthGuardService],\r\n    component: FriendsComponent\r\n  },\r\n  {\r\n    path: 'quizzes/:id',\r\n    component: QuizComponent\r\n  },\r\n  {\r\n    path: 'question',\r\n    component: QuestionComponent\r\n  },\r\n  {\r\n    path: 'new_quiz',\r\n    component: NewQuizComponent\r\n  },\r\n  {\r\n    path: 'add_questions',\r\n    component: AddQuestionsComponent\r\n  },\r\n  {\r\n    path: 'submitted_quiz',\r\n    component: SubmittedQuizComponent\r\n  },\r\n  {\r\n    path: 'quizzes',\r\n    component: QuizzesPageComponent\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '/',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegistrationComponent,\r\n    LoginComponent,\r\n    NavigationComponent,\r\n    ProfileComponent,\r\n    ProfileNavigationComponent,\r\n    LeftBarComponent,\r\n    UserInformationComponent,\r\n    FriendsComponent,\r\n    MyQuizzesComponent,\r\n    FavoriteComponent,\r\n    ChangePasswordComponent,\r\n    QuizComponent,\r\n    QuestionComponent,\r\n    OptionalAnswerComponent,\r\n    BooleanAnswerComponent,\r\n    StringAnswerComponent,\r\n    SequenceAnswerComponent,\r\n    ImageUploadComponent,\r\n    AnswerComponent,\r\n    NewQuizComponent,\r\n    AddQuestionsComponent,\r\n    SubmittedQuizComponent,\r\n    QuizzesPageComponent,\r\n    QuizDialogComponent,\r\n    AddQuestionsComponent,\r\n    DashboardComponent,\r\n    AchievementsListComponent,\r\n    RatingListComponent\r\n  ],\r\n  imports: [\r\n\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatPaginatorModule,\r\n    FlexModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSortModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatPaginatorModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatChipsModule,\r\n    MatExpansionModule,\r\n    MatDividerModule,\r\n    MatCheckboxModule,\r\n    LayoutModule,\r\n    FlexLayoutModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatPaginatorModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    LayoutModule,\r\n    FlexLayoutModule,\r\n    MatProgressBarModule\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [OptionalAnswerComponent, BooleanAnswerComponent, StringAnswerComponent, SequenceAnswerComponent],\r\n})\r\nexport class AppModule {\r\n}\r\n","import { AnswerService } from './../service/answerService/answer.service';\r\nimport { AnswerComponent } from './../answer/answer.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Answer } from '../models/answer.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-boolean-answer',\r\n  templateUrl: './boolean-answer.component.html',\r\n  styleUrls: ['./boolean-answer.component.css']\r\n})\r\nexport class BooleanAnswerComponent extends AnswerComponent implements OnInit {\r\n  checkBox: boolean = false;\r\n\r\n  constructor(answerService: AnswerService) {\r\n    super(answerService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let result: Answer = {\r\n      id: null,\r\n      questionId: 0,\r\n      text: \"\",\r\n      correct: true,\r\n      nextAnswerId: null\r\n    };\r\n    this.answer.push(result);\r\n  }\r\n\r\n  getData(): void {\r\n    this.answer[0].questionId = this.questionId;\r\n    this.answer[0].text = this.checkBox ? \"true\" : \"false\";\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <input type=\"checkbox\" id=\"checkbox\" [ngModel]=\"checkBox\" (change)=\"checkBox=!checkBox\" ngDefaultControl>\r\n    <label for=\"checkbox\">Is question true?</label>\r\n</div>","import { Achievement } from './../../models/achievement.model';\r\nimport { AchievementsService } from '../../service/achievementsService/achievements.service';\r\nimport { Category } from './../../models/category.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-achievements-list',\r\n  templateUrl: './achievements-list.component.html',\r\n  styleUrls: ['./achievements-list.component.css']\r\n})\r\nexport class AchievementsListComponent implements OnInit {\r\n  @Input('userId') userId: number;\r\n\r\n  categories: Observable<Category[]>;\r\n  achievements: Observable<Achievement[]>;\r\n\r\n  constructor(private achievementsService: AchievementsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.categories = this.achievementsService.getAchievementCategories();\r\n    this.achievements = this.achievementsService.getAchievementsByUser(this.userId);\r\n  }\r\n}\r\n","<mat-list *ngFor=\"let category of categories | async\" autosize>\r\n    <div mat-subheader>{{category.name | titlecase}}</div>\r\n    <div *ngFor=\"let achievement of achievements | async\">\r\n        <mat-list-item *ngIf=\"achievement.categoryId==category.id\">\r\n            <mat-icon mat-list-icon>star</mat-icon>\r\n            <div mat-line>{{achievement.name}}</div>\r\n            <div mat-line>{{achievement.description}}</div>\r\n            <div mat-line>\r\n                <mat-progress-bar mode=\"determinate\" [value]=\"achievement.progress\">\r\n                </mat-progress-bar>\r\n            </div>\r\n        </mat-list-item>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n</mat-list>","import {DomSanitizer} from '@angular/platform-browser';\r\nimport {ProfileService} from './../service/profileService/profile.service';\r\nimport {Observable} from 'rxjs';\r\nimport {CategoryService} from './../service/categoryService/category.service';\r\nimport {DashboardService} from './../service/dashboardService/dashboard.service';\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {Quiz} from '../models/quiz.model';\r\nimport {Category} from '../models/category.model';\r\nimport {MatSidenav} from '@angular/material/sidenav';\r\nimport {map} from 'rxjs/operators'\r\nimport {CurrentUserService} from \"../service/current-user.service\";\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  @ViewChild('ratingNavbar') ratingNavbar: MatSidenav;\r\n  @ViewChild('achievementsNavbar') achievementsNavbar: MatSidenav;\r\n\r\n  ratingIsOpen: boolean = false;\r\n  achievementIsOpen: boolean = false;\r\n\r\n\r\n  maxCards: number = 5;\r\n  userId: number = this.currentUserService.getCurrentUser().id; //FIXME: get user id from local storage\r\n\r\n  profileImage: Observable<any>;\r\n\r\n  recentQuizzes: Observable<Quiz[]>;\r\n  topQuizzes: Observable<Quiz[]>;\r\n  recommendationQuizzes: Observable<Quiz[]>;\r\n\r\n  imageMap = new Map<number, Observable<any>>();\r\n\r\n  categories: Observable<Category[]> = this.categoryService.getCategories();\r\n  quizCategory: number = -1;\r\n\r\n  rating: Observable<number>;\r\n\r\n  achievementsTotal: Observable<number>;\r\n  achievementsForUser: Observable<number>;\r\n\r\n  constructor(private dashboardService: DashboardService,\r\n              private categoryService: CategoryService,\r\n              private profileService: ProfileService,\r\n              private sanitizer: DomSanitizer,\r\n              private currentUserService: CurrentUserService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.profileImage = this.profileService.getProfileImage(this.userId.toString()).pipe(\r\n      map(resp => this.sanitizer.bypassSecurityTrustResourceUrl('data:image/png;base64,' + resp.text))\r\n    );\r\n\r\n    this.recentQuizzes = this.dashboardService.getRecentQuizzes(this.userId, this.maxCards);\r\n\r\n    this.topQuizzes = this.dashboardService.getTopQuizzes(this.maxCards);\r\n\r\n    this.recommendationQuizzes = this.dashboardService.getRecommendations(this.userId, this.maxCards);\r\n\r\n    this.rating = this.dashboardService.getRating(this.userId);\r\n\r\n    this.achievementsTotal = this.dashboardService.getAchievementsTotal();\r\n    this.achievementsForUser = this.dashboardService.getAchievementsForUser(this.userId);\r\n  }\r\n\r\n  achievementsOpen(): void {\r\n    if (this.ratingIsOpen) {\r\n      this.ratingNavbar.close();\r\n      this.ratingIsOpen = false;\r\n    }\r\n\r\n    this.achievementIsOpen = true;\r\n    setTimeout(() => {\r\n      this.achievementsNavbar.open();\r\n    }, 0);\r\n\r\n  }\r\n\r\n  ratingOpen(): void {\r\n    if (this.achievementIsOpen) {\r\n      this.achievementsNavbar.close();\r\n      this.achievementIsOpen = false;\r\n    }\r\n\r\n    this.ratingIsOpen = true;\r\n    setTimeout(() => {\r\n      this.ratingNavbar.open();\r\n    }, 0);\r\n  }\r\n\r\n  achievementsClose(): void {\r\n    this.achievementsNavbar.close();\r\n    this.achievementIsOpen = false;\r\n  }\r\n\r\n  ratingClose(): void {\r\n    this.ratingNavbar.close();\r\n    this.ratingIsOpen = false;\r\n  }\r\n\r\n  closeAll(): void {\r\n    if (this.ratingIsOpen) {\r\n      this.ratingNavbar.close();\r\n    }\r\n    if (this.achievementIsOpen) {\r\n      this.achievementsNavbar.close();\r\n    }\r\n  }\r\n\r\n  onQuizCategorySelected(value: number): void {\r\n    if (value === -1) {\r\n      this.topQuizzes = this.dashboardService.getTopQuizzes(this.maxCards);\r\n    } else {\r\n      this.topQuizzes = this.dashboardService.getTopQuizzesByCategory(value, this.maxCards);\r\n    }\r\n  }\r\n\r\n  getQuizImage(quizId: number): Observable<any> {\r\n    if (!this.imageMap.get(quizId)) {\r\n      this.imageMap.set(quizId, this.dashboardService.getQuizImage(quizId).pipe(\r\n        map(resp => this.sanitizer.bypassSecurityTrustResourceUrl('data:image/png;base64,' + resp.text))));\r\n    }\r\n    return this.imageMap.get(quizId);\r\n\r\n  }\r\n\r\n\r\n}\r\n","<mat-drawer-container class=\"achievement-container\">\r\n\r\n  <mat-drawer #ratingNavbar (backdropClick)=\"ratingClose()\" (keydown.escape)=\"ratingClose()\" mode=\"side\"\r\n    *ngIf=\"ratingIsOpen\" position=\"end\">\r\n    <p><button mat-flat-button (click)=\"ratingClose()\" color=\"accent\">Close</button></p>\r\n    <app-rating-list [userId]=\"userId\" [ratingPos]=\"rating\"></app-rating-list>\r\n  </mat-drawer>\r\n\r\n  <mat-drawer #achievementsNavbar (backdropClick)=\" achievementsClose()\" (keydown.escape)=\"achievementsClose()\"\r\n    mode=\"side\" *ngIf=\"achievementIsOpen\" position=\"end\">\r\n    <p><button mat-flat-button (click)=\"achievementsClose()\" color=\"accent\">Close</button></p>\r\n    <app-achievements-list [userId]=\"userId\"></app-achievements-list>\r\n  </mat-drawer>\r\n\r\n  <mat-drawer-content>\r\n    <div class=\"background\" fxLayout.gt-sm=\"row\" fxLayout.gt-xs=\"column\" fxLayoutWrap fxLayoutGap=\"3rem\"\r\n      fxLayoutAlign=\"center\">\r\n      <div fxLayout=\"column\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"starts\">\r\n        <h2>Progress</h2>\r\n\r\n        <mat-card id=\"profile-card\">\r\n          <mat-card-content fxLayout=\"row\" fxLayoutAlign=\"space-around\">\r\n            <img mat-card-image id=\"profile-img\" [src]=\"(profileImage | async)\"\r\n              onerror=\"this.onerror=null; this.src='https://material.angular.io/assets/img/examples/shiba2.jpg'\"\r\n              alt=\"Profile image\" fxFlexAlign=\"end\">\r\n          </mat-card-content>\r\n          <mat-card-actions fxLayoutAlign=\"space-around\">\r\n            <button mat-raised-button id=\"profile-button\" class=\"text\" fxFlexAlign=\"end\" color=\"accent\">Go to\r\n              Profile</button>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n        <mat-card id=\"rating-card\" (click)=\"ratingOpen()\">\r\n          <div>\r\n            <h2 class=\"text\">{{rating |async}}<sup>TH</sup></h2>\r\n          </div>\r\n          <mat-card-footer class=\"rating\">\r\n            <h3>Rating</h3>\r\n          </mat-card-footer>\r\n        </mat-card>\r\n        <mat-card id=\"achievement-card\" (click)=\"achievementsOpen()\">\r\n          <div>\r\n            <h2 class=\"text\">{{achievementsForUser |async}} / {{achievementsTotal |async}}</h2>\r\n          </div>\r\n          <mat-card-footer class=\"rating\">\r\n            <h3>Achievements</h3>\r\n          </mat-card-footer>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div fxLayout=\"column\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"start\">\r\n        <h2>Recent activity</h2>\r\n        <div fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"start\">\r\n          <mat-card class=\"game-card\" *ngFor=\"let quiz of recentQuizzes |async;let i=index\">\r\n            <img mat-card-image class=\"card-image\" [src]=\"getQuizImage(quiz.id) | async\"\r\n              onerror=\"this.onerror=null; this.src='https://material.angular.io/assets/img/examples/shiba2.jpg'\"\r\n              alt=\"Game image\" fxFlexAlign=\"end\">\r\n            <mat-card-content class=\"quiz-name\" fxLayout=\"column\" fxLayoutAlign=\"space-between\" fxFlexAlign=\"center\">\r\n              <h3>{{quiz.name}}</h3>\r\n            </mat-card-content>\r\n          </mat-card>\r\n          <h3 *ngIf=\"(recentQuizzes |async)==null\">No recent activity</h3>\r\n        </div>\r\n\r\n        <div fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\r\n          <h2>Top quizzes</h2>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Select category</mat-label>\r\n            <mat-select [(value)]=\"quizCategory\" (selectionChange)=\"onQuizCategorySelected($event.value)\">\r\n              <mat-option [value]=\"-1\">View all</mat-option>\r\n              <mat-option *ngFor='let category of categories |async' [value]=\"category.id\">\r\n                {{category.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <div fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"start\">\r\n          <mat-card class=\"game-card\" *ngFor=\"let quiz of topQuizzes |async;let i=index\">\r\n            <img mat-card-image class=\"card-image\" [src]=\"getQuizImage(quiz.id) | async\"\r\n              onerror=\"this.onerror=null; this.src='https://material.angular.io/assets/img/examples/shiba2.jpg'\"\r\n              alt=\"Quiz image\" fxFlexAlign=\"end\">\r\n            <mat-card-content class=\"quiz-name\" fxLayout=\"column\" fxLayoutAlign=\"space-between\" fxFlexAlign=\"center\">\r\n              <h3>{{quiz.name}}</h3>\r\n            </mat-card-content>\r\n          </mat-card>\r\n        </div>\r\n\r\n        <h2>Recommendations</h2>\r\n        <div fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"start\">\r\n          <mat-card class=\"game-card\" *ngFor=\"let quiz of recommendationQuizzes |async;let i=index\">\r\n            <img mat-card-image class=\"card-image\" [src]=\"getQuizImage(quiz.id) | async\"\r\n              onerror=\"this.onerror=null; this.src='https://material.angular.io/assets/img/examples/shiba2.jpg'\"\r\n              alt=\"Quiz image\" fxFlexAlign=\"end\">\r\n            <mat-card-content class=\"quiz-name\" fxLayout=\"column\" fxLayoutAlign=\"space-between\" fxFlexAlign=\"center\">\r\n              <h3>{{quiz.name}}</h3>\r\n            </mat-card-content>\r\n          </mat-card>\r\n          <h3 *ngIf=\"(recommendationQuizzes |async)==null\">Play some games to get recommendations</h3>\r\n        </div>\r\n\r\n        <div fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\r\n          <h2>Announcements</h2>\r\n          <mat-select class=\"categories\" placeholder=\"Categories\" fxFlexAlign=\"end\">\r\n            View all\r\n          </mat-select>\r\n        </div>\r\n        <div fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"center\">\r\n          <mat-card class=\"announcements\">\r\n\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-drawer-content>\r\n\r\n</mat-drawer-container>\r\n","import { Observable } from 'rxjs';\r\nimport { RatingService } from './../../service/ratingService/rating.service';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Component({\r\n  selector: 'app-rating-list',\r\n  templateUrl: './rating-list.component.html',\r\n  styleUrls: ['./rating-list.component.css']\r\n})\r\nexport class RatingListComponent implements OnInit {\r\n  @Input('userId') userId: number;\r\n  @Input('ratingPos') ratingPos: Observable<number>;\r\n\r\n  topNumber: number = 3;\r\n  range: number = 2;\r\n  topUsers: Observable<User[]>\r\n  nearUsers: Observable<User[]>;\r\n  displayedColumns: string[] = ['position', 'name', 'surname', 'rating'];\r\n\r\n\r\n  constructor(private ratingService: RatingService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.topUsers = this.ratingService.getRating(0, this.topNumber);\r\n    this.nearUsers = this.ratingService.getRatingRange(this.userId, this.range);\r\n  }\r\n\r\n}\r\n","<div>\r\n    <table mat-table matColumnDef=\"position\" [dataSource]=\"topUsers | async\">\r\n        class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"position\">\r\n            <div *matHeaderCellDef>No.</div>\r\n            <div *matCellDef=\"let user; let i=index\" [style.color]=\"user.id==userId ? 'yellow' : 'black'\">{{i+1}}</div>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n            <div *matHeaderCellDef>Name</div>\r\n            <div *matCellDef=\"let user\">{{user.name}}</div>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"surname\">\r\n            <div *matHeaderCellDef>Surname</div>\r\n            <div class=\"description-cell\" *matCellDef=\"let user\" [style.color]=\"user.id==userId ? 'yellow' : 'black'\">\r\n                {{user.surname}}</div>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"rating\">\r\n            <div *matHeaderCellDef>Rating</div>\r\n            <div class=\"duration-cell\" *matCellDef=\"let user\" [style.color]=\"user.id==userId ? 'yellow' : 'black'\">\r\n                {{user.rating}}</div>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\r\n    </table>\r\n\r\n    <mat-icon mat-list-icon *ngIf=\"((ratingPos|async)-range)>=topNumber\">more_horiz</mat-icon>\r\n\r\n\r\n    <table mat-table matColumnDef=\" position\" [dataSource]=\"nearUsers | async\">\r\n        class=\"mat-elevation-z8\">\r\n\r\n        <ng-container matColumnDef=\"position\">\r\n            <div *matCellDef=\"let user; let i=index\" [style.color]=\"user.id==userId ? 'red' : 'black'\">\r\n                {{i+(ratingPos|async)-range+1}}\r\n            </div>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n            <div *matCellDef=\"let user\" [style.color]=\"user.id==userId ? 'red' : 'black'\">{{user.name}}</div>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"surname\">\r\n            <div class=\"description-cell\" *matCellDef=\"let user\" [style.color]=\"user.id==userId ? 'red' : 'black'\">\r\n                {{user.surname}}</div>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"rating\">\r\n            <div class=\"duration-cell\" *matCellDef=\"let user\" [style.color]=\"user.id==userId ? 'red' : 'black'\">\r\n                {{user.rating}}</div>\r\n        </ng-container>\r\n\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"\r\n            [class.hidden]=\"(i+(ratingPos|async)-range)<=topNumber\">\r\n        </mat-row>\r\n    </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nclass ImageSnippet {\r\n  constructor(public src: string, public file: File) { }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-image-upload',\r\n  templateUrl: './image-upload.component.html',\r\n  styleUrls: ['./image-upload.component.css']\r\n})\r\nexport class ImageUploadComponent implements OnInit {\r\n  selectedFile: ImageSnippet;\r\n  name: String;\r\n\r\n  constructor() { }\r\n  ngOnInit(): void {\r\n    this.name = \"Choose file\";\r\n  }\r\n\r\n  processFile(imageInput: any) {\r\n    const file: File = imageInput.files[0]\r\n    const reader = new FileReader();\r\n\r\n    reader.addEventListener('load', (event: any) => {\r\n      this.selectedFile = new ImageSnippet(event.target.result, file);\r\n      this.name = file.name;\r\n    })\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"image-input\">\r\n    <mat-form-field class=\"image-name\">\r\n        <mat-label #imageLabel class=\"custom-file-label\" for=\"inputGroupFile01\" ng-bind=\"name\">{{name}}</mat-label>\r\n        <input #imageInput style=\"display: none;\" id=\"image\" type=\"file\" accept=\"image/*\" aria-label=\"Select image\"\r\n            (change)=\"processFile(imageInput)\">\r\n        <input matInput disabled>\r\n    </mat-form-field>\r\n    <button mat-raised-button class=\"input-group-text\" id=\"inputGroupFileAddon01\"\r\n        (click)=\"imageInput.click()\">Image</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {User} from \"../models/user\";\r\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  model: User = {\r\n    image: undefined, notificationStatus: undefined,\r\n    about: \"\",\r\n    birthdate: undefined,\r\n    city: \"\",\r\n    countryId: \"\",\r\n    gender: undefined,\r\n    name: \"\",\r\n    rating: \"\",\r\n    role: undefined,\r\n    surname: \"\",\r\n    id: null,\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  constructor(private authenticationService: AuthenticationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  Login() {\r\n    this.authenticationService.login(this.model.email, this.model.password);\r\n  }\r\n}\r\n","<div fxLayout=\"row\" class>\r\n  <div fxFlex=\"30\"></div>\r\n  <div fxFlex=\"center center\">\r\n    <form name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && Login()\">\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input type=\"email\" matInput\r\n               name=\"login\"\r\n               [(ngModel)]=\"model.email\"\r\n               #email=\"ngModel\"\r\n               [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\"/>\r\n        <mat-error *ngIf=\"email.errors?.required\">Email is required</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input type=\"password\" matInput\r\n               name=\"password\"\r\n               [(ngModel)]=\"model.password\">\r\n      </mat-form-field>\r\n      <br>\r\n      <button mat-raised-button type=\"submit\">Submit</button>\r\n    </form>\r\n\r\n    <a routerLink=\"/registration\">Registration<span class=\"sr-only\">(current)</span></a>\r\n  </div>\r\n  <div fxFlex=\"30\"></div>\r\n</div>\r\n\r\n\r\n\r\n","export enum QuestionType {\r\n    OPTION = \"Option\",\r\n    BOOLEAN = \"Boolean\",\r\n    ANSWER = \"Answer\",\r\n    SEQUENCE = \"Sequence\"\r\n}\r\n\r\nexport interface Question {\r\n    id: number,\r\n    quizId: number,\r\n    type: String,\r\n    text: string,\r\n    active: boolean\r\n    //TODO: add language and image\r\n} ","import {User} from \"./user\";\r\nimport {Category} from \"./category.model\";\r\n\r\n\r\nexport enum StatusType {\r\n  PENDING = \"Pending\",\r\n  ACTIVE = \"Active\",\r\n  DEACTIVATED = \"Deactivated\",\r\n  DELETED = \"Deleted\"\r\n}\r\n\r\nexport interface Quiz {\r\n  id:number;\r\n  name:string;\r\n  author:User;\r\n  category:Category;\r\n  date:string;\r\n  description:string;\r\n  status:StatusType;\r\n  modification_time:string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthenticationService} from '../service/loginService/authentication.service';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  currentUser: any;\r\n  username: string;\r\n  id: string;\r\n  constructor(public authService: AuthenticationService,\r\n              private router: Router) {\r\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    if (this.currentUser != null){\r\n      this.username = this.currentUser.email;\r\n      this.id = this.currentUser.id;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toProfile(){\r\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n      this.router.navigate(['profile', this.id, {outlets: {profilenav: 'profinfo'}}]);\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-toolbar>\r\n  <mat-toolbar-row>\r\n    <a mat-button routerLink=\"/\">QUIZ</a>\r\n    <a mat-button routerLink=\"/quizzes\">Quizzes</a>\r\n    <span class=\"spacer\"></span>\r\n    <a mat-button routerLink=\"/register\" *ngIf=\"!authService.logIn\">Register</a>\r\n    <a mat-button routerLink=\"/login\" *ngIf=\"!authService.logIn\">Login</a>\r\n    <a\r\n      mat-button [routerLink]=\"['profile', id, {outlets: {profilenav: 'profinfo'}}]\" *ngIf=\"authService.logIn\">{{username}}</a>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button\r\n        mat-menu-item [routerLink]=\"['profile', id, {outlets: {profilenav: 'profinfo'}}]\" *ngIf=\"authService.logIn\">\r\n        <mat-icon>assignment_ind</mat-icon>\r\n        <span>Profile</span>\r\n      </button>\r\n      <button mat-menu-item (click)=\"authService.logout()\" *ngIf=\"authService.logIn\" routerLink=\"/\">\r\n        <mat-icon>exit_to_app</mat-icon>\r\n        <span>Logout</span>\r\n      </button>\r\n    </mat-menu>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import { mergeMap, map, defaultIfEmpty } from 'rxjs/operators';\r\nimport { TagService } from './../service/tagService/tag.service';\r\nimport { Router } from '@angular/router';\r\nimport { NewQuizService } from './../service/newQuizService/new-quiz.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { CategoryService } from './../service/categoryService/category.service';\r\nimport { Category } from './../models/category.model';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Quiz } from '../models/add-quiz.model';\r\nimport { StatusType } from '../models/quiz.model';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { Tag } from '../models/tag.model';\r\nimport { forkJoin, Observable } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-quiz',\r\n  templateUrl: './new-quiz.component.html',\r\n  styleUrls: ['./new-quiz.component.css']\r\n})\r\nexport class NewQuizComponent implements OnInit {\r\n  @ViewChild('chipList') chipList: ElementRef<HTMLInputElement>;\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  tags: Tag[] = [];\r\n\r\n  quizForm: FormGroup;\r\n  submitted: boolean = false;\r\n  categories: Category[];\r\n\r\n  quiz: Quiz = {\r\n    id: 0,\r\n    name: \"\",\r\n    author: 2,\r\n    category_id: 1,\r\n    date: new Date().toISOString(),\r\n    description: \"\",\r\n    status: StatusType.PENDING.toString(),\r\n    modification_time: new Date().toISOString()\r\n  };\r\n\r\n  constructor(\r\n    private categoryService: CategoryService,\r\n    private newQuizService: NewQuizService,\r\n    private tagService: TagService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadCategories();\r\n\r\n    this.quizForm = this.formBuilder.group({\r\n      name: ['', [Validators.required, Validators.maxLength]],\r\n      category: ['General'],\r\n      description: ['', [Validators.maxLength]]\r\n    });\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    if ((value || '').trim() && !(this.tags.find(element => element.name == value.trim()))) {\r\n      this.tags.push({ id: null, name: value.trim() });\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  remove(fruit: Tag): void {\r\n    const index = this.tags.indexOf(fruit);\r\n\r\n    if (index >= 0) {\r\n      this.tags.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  loadCategories() {\r\n    this.categoryService.getCategories().subscribe(\r\n      resp => { this.categories = resp },\r\n      err => console.error(err),\r\n      () => console.log('Done loading categories')\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.quizForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.getData()\r\n\r\n    this.saveQuiz();\r\n  }\r\n\r\n  saveQuiz(): void {\r\n\r\n    this.newQuizService.postQuiz(this.quiz).pipe(\r\n      map(quiz =>\r\n        this.quiz.id = quiz.id),\r\n      mergeMap(\r\n        () => {\r\n          return this.saveTags();\r\n        }\r\n      ),\r\n      defaultIfEmpty([])\r\n    ).subscribe(\r\n      () => {\r\n        console.log('Quiz info added');\r\n        this.router.navigateByUrl('/add_questions', {\r\n          state: {\r\n            id: this.quiz.id,\r\n            name: this.quiz.name\r\n          }\r\n        });\r\n      },\r\n      err => {\r\n        alert(err.error['message']);\r\n      }\r\n    );\r\n  }\r\n\r\n  saveTags(): Observable<any> {\r\n    let observableBatch: Observable<any>[] = [];\r\n\r\n    this.tags.forEach(\r\n      (item, index) => {\r\n        observableBatch.push(this.tagService.postTag(item).pipe(\r\n          map(\r\n            tag => {\r\n              this.tags[index].id = tag.id;\r\n              return this.tags[index];\r\n            }\r\n          ),\r\n          mergeMap(\r\n            (tag) => {\r\n              return this.tagService.addTagToQuiz(this.quiz.id, tag.id);\r\n            }\r\n          )\r\n        ));\r\n      }\r\n    )\r\n\r\n    return forkJoin(observableBatch);\r\n  }\r\n\r\n  getData(): void {\r\n    let input: Quiz = JSON.parse(JSON.stringify(this.quizForm.value));\r\n    console.log(input);\r\n    this.quiz.name = input.name;\r\n    let category = this.quizForm.get('category').value;\r\n    this.quiz.category_id = this.categories.find(function (el) { return el.name === category; }).id;\r\n    this.quiz.description = input.description;\r\n    this.quiz.status = this.quiz.status.toUpperCase();\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <mat-card>\r\n        <mat-card-title>\r\n            <h2>New Quiz</h2>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n            <div class=\"form-container\">\r\n                <form [formGroup]=\"quizForm\">\r\n\r\n                    <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n                        <mat-label>Enter quiz name</mat-label>\r\n                        <input matInput #input maxlength=\"30\" formControlName=\"name\" placeholder=\"Quiz name\" required>\r\n                        <mat-hint align=\"end\">{{input.value?.length || 0}}/30</mat-hint>\r\n                        <mat-error\r\n                            *ngIf=\"quizForm.get('name').errors?.required && (submitted || quizForm.get('name').touched || quizForm.get('name').dirty)\">\r\n                            You must enter quiz name </mat-error>\r\n                        <mat-error *ngIf=\"quizForm.get('name').errors?.maxlength\">Quiz name can be max 30 characters\r\n                            long.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <app-image-upload class=\"form-field\"></app-image-upload>\r\n                    <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n                        <mat-label>Select category</mat-label>\r\n                        <mat-select formControlName=\"category\" value=\"questionTypes[0]\">\r\n                            <mat-option *ngFor='let category of categories' [value]='category.name'>\r\n                                {{category.name | titlecase}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"form-field\">\r\n                        <mat-chip-list #chipList aria-label=\"Tag selection\">\r\n                            <mat-chip *ngFor=\"let tag of tags\" [selectable]=\"selectable\" [removable]=\"removable\"\r\n                                (removed)=\"remove(tag)\">\r\n                                {{tag.name}}\r\n                                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n                            </mat-chip>\r\n                            <input placeholder=\"Add tag...\" [matChipInputFor]=\"chipList\"\r\n                                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                                (matChipInputTokenEnd)=\"add($event)\">\r\n                        </mat-chip-list>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"form-field\">\r\n                        <mat-label>Description</mat-label>\r\n                        <textarea matInput class=\"form-control\" formControlName=\"description\"\r\n                            placeholder=\"Description\"></textarea>\r\n                        <mat-error *ngIf=\"quizForm.get('name').errors?.maxlength\">Description can be max 360 characters\r\n                            long.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </form>\r\n            </div>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button type=\"submit\" (click)=\"onSubmit()\">Next</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>","import { AnswerService } from './../service/answerService/answer.service';\r\nimport { AnswerComponent, SequenceValidator } from './../answer/answer.component';\r\nimport { Component, OnInit, ViewChildren, QueryList, AfterViewInit } from '@angular/core';\r\nimport { FormGroup, FormArray, Validators, FormControl, FormBuilder } from '@angular/forms';\r\nimport { ImageUploadComponent } from '../image-upload/image-upload.component';\r\n\r\n@Component({\r\n  selector: 'app-optional-answer',\r\n  templateUrl: './optional-answer.component.html',\r\n  styleUrls: ['./optional-answer.component.css']\r\n})\r\nexport class OptionalAnswerComponent extends AnswerComponent implements OnInit {\r\n  @ViewChildren(ImageUploadComponent) imageComponents!: QueryList<ImageUploadComponent>;\r\n\r\n  answerForm: FormGroup;\r\n  items: FormArray;\r\n\r\n  maxAnswer = 4;\r\n  minRequired = 2;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    answerService: AnswerService) {\r\n    super(answerService);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.answerForm = new FormGroup({\r\n      items: this.formBuilder.array([])\r\n    });\r\n    for (var _i = 0; _i < this.maxAnswer; _i++) {\r\n      this.answer.push({\r\n        id: null,\r\n        questionId: 0,\r\n        text: \"\",\r\n        correct: false,\r\n        nextAnswerId: null\r\n      });\r\n      let correctControl = new FormControl(this.answer[_i].correct, []);\r\n      let textControl = new FormControl(this.answer[_i].text, []);\r\n      if (_i < this.minRequired) {\r\n        textControl.setValidators([Validators.required, Validators.maxLength(30)]);\r\n      }\r\n      this.items = this.answerForm.get('items') as FormArray;\r\n      this.items.push(\r\n        this.formBuilder.group({\r\n          isCorrect: correctControl,\r\n          text: textControl\r\n        })\r\n      )\r\n    }\r\n    this.answerForm.get('items').setValidators([SequenceValidator()]);\r\n  }\r\n\r\n  isValid(): boolean {\r\n    this.submitted = true;\r\n    this.items.setValidators(SequenceValidator());\r\n    this.items.markAsTouched();\r\n    return this.answerForm.valid;\r\n  }\r\n\r\n  getData(): void {\r\n    let items = this.answerForm.get('items') as FormArray;\r\n    for (var i = 0; i < this.answer.length; i++) {\r\n      let current = items.at(i);\r\n      this.answer[i].correct = current.get('isCorrect').value;\r\n      this.answer[i].text = current.get('text').value;\r\n\r\n      if (this.answer[i].text === \"\" || this.answer[i].text == null)\r\n        break;\r\n\r\n      this.answer[i].questionId = this.questionId;\r\n\r\n      console.log(this.answer[i]);\r\n    }\r\n  }\r\n\r\n  getImages(): void {\r\n    this.imageComponents.forEach(image => {\r\n      if (image.selectedFile != null) {\r\n        this.images.push(image.selectedFile.file);\r\n      } else {\r\n        this.images.push(null);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <form [formGroup]=\"answerForm\">\r\n        <ol formArrayName=\"items\">\r\n            <li *ngFor=\"let item of items.controls; let i=index\">\r\n                <div [formGroupName]=\"i\">\r\n                    <div>\r\n                        <input id=\"checkbox\" type=\"checkbox\" formControlName=\"isCorrect\" color=\"primary\">\r\n                        <label for=\"checkbox\">Check if answer is correct</label>\r\n                    </div>\r\n                    <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n                        <mat-label>Enter answer name</mat-label>\r\n                        <input matInput #input maxlength=\"30\" formControlName=\"text\" placeholder=\"Quiz name\">\r\n                        <mat-error\r\n                            *ngIf=\"items.controls[i].get('text').errors?.required && (submitted || items.controls[i].get('text').touched || items.controls[i].get('text').dirty)\">\r\n                            Should have at least two answers.\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"items.controls[i].get('text').errors?.maxlength\"> Answer can be max\r\n                            30 characters long. </mat-error>\r\n                        <mat-error *ngIf=\"items.controls[i].errors?.mustExist\">Add text. Next\r\n                            answer is not empty. </mat-error>\r\n                    </mat-form-field>\r\n                    <app-image-upload></app-image-upload>\r\n                    <mat-divider *ngIf=\"i!=items.controls.length-1\"></mat-divider>\r\n                </div>\r\n            </li>\r\n        </ol>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ProfileService} from \"../../service/profileService/profile.service\";\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  public changePasswordForm: FormGroup;\r\n  submitted = false;\r\n  newPassword: string;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private profileService: ProfileService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.changePasswordForm = this.formBuilder.group({\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {\r\n      validator: MustMatch('password', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  get f() { return this.changePasswordForm.controls; }\r\n\r\n\r\n  public changingPassFormValidation(){\r\n    this.submitted = true;\r\n\r\n    if (this.changePasswordForm.invalid) {\r\n      return;\r\n    }\r\n    this.newPassword = this.changePasswordForm.value;\r\n    this.changePassword();\r\n  }\r\n\r\n  changePassword() {\r\n    this.profileService.updatePassword(this.newPassword).subscribe(\r\n      (resp: any) => {\r\n        alert(\"Password was changed\")\r\n      },\r\n      error => {\r\n        alert(\"Something wrong while save password\")\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n  return (formGroup: FormGroup) => {\r\n    const control = formGroup.controls[controlName];\r\n    const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n      return;\r\n    }\r\n\r\n    if (control.value !== matchingControl.value) {\r\n      matchingControl.setErrors({ mustMatch: true });\r\n    } else {\r\n      matchingControl.setErrors(null);\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"row\" class >\r\n  <div fxFlex=\"30\"></div>\r\n  <div fxFlex=\"center center\">\r\n    <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"changingPassFormValidation()\">\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input type=\"password\"  matInput formControlName=\"password\"  placeholder=\"Password\"  name=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" required/>\r\n        <mat-error *ngIf=\"f.password.errors.required\">Password is require</mat-error>\r\n        <mat-error *ngIf=\"f.password.errors.pattern\">Must contain at least 8 or more characters</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input type=\"password\"  matInput  placeholder=\"Password\" formControlName=\"confirmPassword\"  name=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n        <mat-error *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</mat-error>\r\n        <mat-error *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <button mat-raised-button type=\"submit\">Change password</button>\r\n\r\n    </form>\r\n  </div>\r\n  <div fxFlex=\"30\"></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Quiz} from \"../../models/quiz\";\r\nimport {ProfileService} from \"../../service/profileService/profile.service\";\r\nimport {PageEvent} from \"@angular/material/paginator\";\r\nimport {Subject} from \"rxjs\";\r\nimport {debounceTime, distinctUntilChanged} from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: 'app-favorite',\r\n  templateUrl: './favorite.component.html',\r\n  styleUrls: ['./favorite.component.css']\r\n})\r\nexport class FavoriteComponent implements OnInit {\r\n  constructor(private profileService: ProfileService) { }\r\n  quizzes:Quiz[];\r\n  public userRequest: string;\r\n  userQuestionUpdate = new Subject<string>();\r\n\r\n  length = 0;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  pageSizeOptions: number[] = [6, 12, 18];\r\n\r\n  ngOnInit(): void {\r\n    this.setPaginationParamDefault();\r\n    this.uploadFavoriteQuizzes();\r\n\r\n    this.userQuestionUpdate.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged())\r\n      .subscribe(userSearch => {\r\n        if (userSearch.length == 0) {\r\n          this.setPaginationParamDefault();\r\n          this.uploadFavoriteQuizzes()\r\n        } else {\r\n          this.filterFavoriteQuizzes(userSearch);\r\n        }\r\n      });\r\n  }\r\n\r\n  uploadFavoriteQuizzes(){\r\n    this.profileService.getFavoriteGames(this.pageSize, this.pageIndex).subscribe(\r\n      resp=>{\r\n        this.quizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n  setPaginationParamDefault() {\r\n    this.pageIndex = 0;\r\n    this.pageSize = 6;\r\n  }\r\n\r\n  onPageChanged($event: PageEvent) {\r\n    this.pageIndex = $event.pageIndex;\r\n    this.pageSize = $event.pageSize;\r\n    this.choseRequest();\r\n  }\r\n\r\n  filterFavoriteQuizzes(userSearch: string){\r\n    this.profileService.filterFavoriteRequest(userSearch, this.pageSize, this.pageIndex).subscribe(\r\n      resp=>{\r\n        this.quizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  choseRequest(){\r\n    if (this.userRequest != undefined && this.userRequest) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.filterFavoriteQuizzes(this.userRequest);\r\n    } else {\r\n      this.uploadFavoriteQuizzes();\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-form-field class=\"input-form\">\r\n  <mat-label>Search quiz</mat-label>\r\n  <input matInput type=\"search\" placeholder=\"Search\" value=\"\" [(ngModel)]=\"userRequest\"\r\n         (ngModelChange)=\"this.userQuestionUpdate.next($event)\">\r\n</mat-form-field>\r\n<div  #maincontent fxLayout=\"row wrap\">\r\n  <div *ngFor=\"let quiz of quizzes\" fxLayout=\"row wrap\">\r\n    <app-quiz [quizData]=\"quiz\">\r\n    </app-quiz>\r\n  </div>\r\n  <mat-paginator [pageIndex]=\"pageIndex\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n                 (page)=\"onPageChanged($event); maincontent.scrollTop = 0;\">\r\n  </mat-paginator>\r\n</div>\r\n","import {ProfileService} from '../../service/profileService/profile.service';\r\nimport {ShareIdService} from '../../service/profileService/share-id.service';\r\nimport {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {User} from \"../../models/user\";\r\nimport {PageEvent} from \"@angular/material/paginator\";\r\nimport {Subject} from \"rxjs\";\r\nimport {debounceTime, distinctUntilChanged} from \"rxjs/operators\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-friends',\r\n  templateUrl: './friends.component.html',\r\n  styleUrls: ['./friends.component.css']\r\n})\r\nexport class FriendsComponent implements OnInit {\r\n  friends: User[];\r\n  displayedColumns: string[] = ['name', 'rating', 'actions'];\r\n  public userRequest: string;\r\n  userQuestionUpdate = new Subject<string>();\r\n  sortDirection = undefined;\r\n\r\n\r\n  length = 0;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  pageSizeOptions: number[] = [9, 18, 27];\r\n\r\n  constructor(private profileService: ProfileService,\r\n              private router: Router,\r\n              private shareId: ShareIdService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setPaginationParamDefault();\r\n\r\n    this.uploadFriends();\r\n\r\n    this.userQuestionUpdate.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged())\r\n      .subscribe(userSearch => {\r\n        if (userSearch.length == 0) {\r\n          this.setPaginationParamDefault();\r\n          this.uploadFriends()\r\n        } else {\r\n          this.filterFriends(userSearch);\r\n        }\r\n      });\r\n  }\r\n\r\n  checkOut(id: string, email: string) {\r\n    this.shareId.setEmail(email);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n      this.router.navigate(['profile', id, {outlets: {profilenav: 'profinfo'}}]);\r\n    });\r\n  }\r\n\r\n  setPaginationParamDefault() {\r\n    this.pageIndex = 0;\r\n    this.pageSize = 9;\r\n  }\r\n\r\n  uploadFriends(){\r\n    this.profileService.getFriends(this.pageSize, this.pageIndex, this.sortDirection).subscribe(resp => {\r\n      this.friends = resp.responceList;\r\n      this.length = resp.totalNumberOfElement;\r\n    });\r\n  }\r\n\r\n  onPageChanged($event: PageEvent) {\r\n    this.pageIndex = $event.pageIndex;\r\n    this.pageSize = $event.pageSize;\r\n    this.choseRequest();\r\n  }\r\n\r\n  filterFriends(userSearch: string) {\r\n    this.profileService.filterFriendsRequest(userSearch, this.pageSize, this.pageIndex, this.sortDirection).subscribe(\r\n      resp=>{\r\n        this.friends = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n  sortFriends($event) {\r\n    this.sortDirection = $event.direction==''? undefined : $event;\r\n    this.setPaginationParamDefault();\r\n    this.choseRequest();\r\n  }\r\n\r\n  choseRequest(){\r\n    if (this.userRequest != undefined && this.userRequest) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.filterFriends(this.userRequest);\r\n    } else {\r\n      this.uploadFriends();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","<mat-form-field class=\"input-form\">\r\n  <mat-label>Search quiz</mat-label>\r\n  <input matInput type=\"search\" placeholder=\"Search\" value=\"\" [(ngModel)]=\"userRequest\"\r\n         (ngModelChange)=\"this.userQuestionUpdate.next($event)\">\r\n</mat-form-field>\r\n<div id=\"table\" class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"friends\" class=\"mat-elevation-z8\" matSort (matSortChange) = \"sortFriends($event)\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let element\" ><a routerLink=\"\"\r\n                                                (click)=\"checkOut(element.id, element.email)\">\r\n        {{element.name}} {{element.surname}}</a></td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"rating\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Rating</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.rating}}</td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n      <td mat-cell  *matCellDef>\r\n        <button mat-icon-button>\r\n          <mat-icon>chat</mat-icon>\r\n        </button>\r\n        <button mat-icon-button>\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  <mat-paginator [pageIndex]=\"pageIndex\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n                 (page)=\"onPageChanged($event)\">\r\n  </mat-paginator>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ProfileService} from \"../../service/profileService/profile.service\";\r\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\r\nimport {NotificationStatus} from \"../../models/notification-status.enum\";\r\nimport {ShareIdService} from \"../../service/profileService/share-id.service\";\r\n\r\n@Component({\r\n  selector: 'app-left-bar',\r\n  templateUrl: './left-bar.component.html',\r\n  styleUrls: ['./left-bar.component.css']\r\n})\r\nexport class LeftBarComponent implements OnInit {\r\n  username = JSON.parse(localStorage.getItem('currentUser')).email;\r\n  currentUserId = JSON.parse(localStorage.getItem('currentUser')).id;\r\n  notificationStatus: NotificationStatus;\r\n  progressImage: any;\r\n  file: SafeResourceUrl;\r\n  id : string;\r\n  constructor(private profileService: ProfileService,\r\n              private sanitizer: DomSanitizer,\r\n              private shareId: ShareIdService) {\r\n    this.id = shareId.shareId();\r\n\r\n    if (shareId.shareEmail() != undefined){\r\n      this.username = shareId.shareEmail();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.uploadFile();\r\n    this.getNotification();\r\n  }\r\n\r\n  fileProgress(imageInput: any){\r\n    this.progressImage = <File>imageInput.target.files[0];\r\n    this.changeImg();\r\n  }\r\n\r\n  changeImg() {\r\n    this.profileService.updateImage(this.progressImage).subscribe(\r\n      resp => {\r\n        this.uploadFile();\r\n        alert(\"Icon was changed\")\r\n      },\r\n      error => {\r\n        alert(\"Error while updating icon\")\r\n      }\r\n    )\r\n  }\r\n\r\n  uploadFile(){\r\n    this.profileService.getProfileImage(this.id).subscribe(\r\n      resp => {\r\n        this.file = this.sanitizer.bypassSecurityTrustResourceUrl('data:image/png;base64,' + resp.text);\r\n        console.log(this.file);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  change(){\r\n    this.profileService.updateNotificationStatus(this.notificationStatus).subscribe(\r\n      resp =>{\r\n        alert(\"Notification status was changed\")\r\n      },\r\n      error => {\r\n        alert(\"Error while change notification status\")\r\n      }\r\n    );\r\n  }\r\n\r\n  getNotification() {\r\n    this.profileService.getUserNotificationStatus().subscribe(\r\n      resp =>{\r\n        this.notificationStatus = resp;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card class=\"card\" >\r\n\r\n  <img mat-card-image [src]=\"file\" height=\"250\" width=\"250\">\r\n  <br>\r\n  <div fxLayout=\"column\">\r\n    <div fxLayoutAlign=\"end\">\r\n      <button mat-icon-button id=\"changeImg\" (click)=\"image.click()\" *ngIf=\"currentUserId==id\"  >\r\n        <input style=\"display: none\" type=\"file\" accept=\"image/*\" (change)=\"fileProgress($event)\" #image>\r\n        <mat-icon>cloud_upload</mat-icon>\r\n      </button>\r\n    </div>\r\n\r\n  </div>\r\n  <mat-card-content fxLayoutAlign=\"center\">\r\n    <p>{{username}}</p>\r\n\r\n  </mat-card-content >\r\n  <mat-card-actions fxLayout=\"column\" fxLayoutAlign=\"center center\" *ngIf=\"currentUserId==id\">\r\n    <button mat-raised-button [routerLink]=\"[{outlets: {profilenav: 'changePass'}}]\" >Change password</button>\r\n    <br>\r\n\r\n\r\n    <mat-form-field>\r\n      <mat-label>Notification status</mat-label>\r\n      <mat-select [(value)]=\"notificationStatus\">\r\n        <mat-option value=\"ON\" (click)=\"change()\">ON</mat-option>\r\n        <mat-option value=\"OFF\" (click)=\"change()\">OFF</mat-option>\r\n        <mat-option value=\"FRIENDS_ONLY\" (click)=\"change()\">FRIENDS_ONLY</mat-option>\r\n        <mat-option value=\"SYSTEM_ONLY\" (click)=\"change()\">SYSTEM_ONLY</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ProfileService} from '../../service/profileService/profile.service';\r\nimport {PageEvent} from \"@angular/material/paginator\";\r\nimport {Quiz} from \"../../models/quiz\";\r\nimport {Subject} from \"rxjs\";\r\nimport {debounceTime, distinctUntilChanged} from \"rxjs/operators\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-my-quizzes',\r\n  templateUrl: './my-quizzes.component.html',\r\n  styleUrls: ['./my-quizzes.component.css']\r\n})\r\nexport class MyQuizzesComponent implements OnInit {\r\n  userQuizzes: Quiz[];\r\n  displayedColumns: string[] = ['name', 'category', 'status', 'actions'];\r\n  public userRequest: string;\r\n  userQuestionUpdate = new Subject<string>();\r\n  sortDirection = undefined;\r\n\r\n  length = 0;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  pageSizeOptions: number[] = [8, 16, 24];\r\n\r\n\r\n  constructor(private profileService: ProfileService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setPaginationParamDefault();\r\n    this.getUserQuizzes();\r\n\r\n    this.userQuestionUpdate.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged())\r\n      .subscribe(userSearch => {\r\n        if (userSearch.length ==0) {\r\n          this.setPaginationParamDefault();\r\n          this.getUserQuizzes();\r\n        } else {\r\n          this.filterQuizzes(userSearch);\r\n        }\r\n      });\r\n  }\r\n\r\n  getUserQuizzes() {\r\n    this.profileService.getUserQuizzes(this.pageSize, this.pageIndex, this.sortDirection).subscribe(\r\n      resp => {\r\n        this.userQuizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      });\r\n  }\r\n\r\n  setPaginationParamDefault() {\r\n    this.pageIndex = 0;\r\n    this.pageSize = 8;\r\n  }\r\n\r\n  onPageChanged($event: PageEvent) {\r\n    this.pageIndex = $event.pageIndex;\r\n    this.pageSize = $event.pageSize;\r\n    this.choseRequest();\r\n  }\r\n\r\n  filterQuizzes(userSearch: string) {\r\n    this.profileService.filterQuizzesRequest(userSearch, this.pageSize, this.pageIndex, this.sortDirection).subscribe(\r\n      resp=>{\r\n        this.userQuizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n  choseRequest() {\r\n    if (this.userRequest != undefined && this.userRequest) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.filterQuizzes(this.userRequest);\r\n    }else {\r\n      this.getUserQuizzes();\r\n    }\r\n  }\r\n\r\n  sortQuizzes($event) {\r\n    this.sortDirection = $event.direction==''? undefined : $event;\r\n    this.setPaginationParamDefault();\r\n    this.choseRequest();\r\n  }\r\n}\r\n","<mat-form-field class=\"input-form\">\r\n  <mat-label>Search quiz</mat-label>\r\n  <input matInput type=\"search\" placeholder=\"Search\" value=\"\" [(ngModel)]=\"userRequest\"\r\n         (ngModelChange)=\"this.userQuestionUpdate.next($event)\">\r\n</mat-form-field>\r\n\r\n  <div id=\"add-quiz-button\">\r\n    <button mat-raised-button routerLink=\"/new_quiz\">Create quiz</button>\r\n  </div>\r\n\r\n<br>\r\n<div id=\"table\" class=\"mat-elevation-z8\">\r\n  <table mat-table  [dataSource]=\"userQuizzes\" matSort class=\"mat-elevation-z8\" matSort (matSortChange) = \"sortQuizzes($event)\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"category\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Category</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.category}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"status\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.status}}</td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container  matColumnDef=\"actions\">\r\n      <th id=\"actions\" mat-header-cell *matHeaderCellDef> Acting</th>\r\n      <mat-cell *matCellDef=\"let row\">\r\n        <button mat-icon-button>\r\n          <mat-icon>play_arrow</mat-icon>\r\n        </button>\r\n        <button mat-icon-button>\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button>\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </mat-cell>\r\n\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  <mat-paginator [pageIndex]=\"pageIndex\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n                 (page)=\"onPageChanged($event)\"></mat-paginator>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ShareIdService} from \"../../service/profileService/share-id.service\";\r\n\r\n@Component({\r\n  selector: 'app-profile-navigation',\r\n  templateUrl: './profile-navigation.component.html',\r\n  styleUrls: ['./profile-navigation.component.css']\r\n})\r\nexport class ProfileNavigationComponent implements OnInit {\r\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  id:any;\r\n\r\n  navLinks: any = [\r\n    {\r\n      label: 'My Profile',\r\n      link:'[{outlets: {profilenav: \\'profinfo\\'}}]',\r\n      index: 0\r\n    },\r\n    {\r\n      label: 'My friends',\r\n      link: '[{outlets: {profilenav: \\'profinfo\\'}}]',\r\n      index: 1\r\n    },\r\n    {\r\n      label: 'My Quizzes',\r\n      link: '[{outlets: {profilenav: \\'profinfo\\'}}]',\r\n      index: 2\r\n    },\r\n    {\r\n      label: 'Favorite',\r\n      link: [{outlets: {profilenav: 'profinfo'}}],\r\n      index: 3\r\n    }\r\n  ];\r\n  constructor(private shareId: ShareIdService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.shareId.shareId();\r\n  }\r\n\r\n}\r\n","<nav mat-tab-nav-bar *ngIf=\"currentUser.id == id\">\r\n  <a mat-tab-link [routerLink]=\"[{outlets: {profilenav: 'profinfo'}}]\"\r\n     routerLinkActive #myProfile=\"routerLinkActive\" [active]=\"myProfile.isActive\">My Profile</a>\r\n  <a mat-tab-link [routerLink]=\"[{outlets: {profilenav: 'friends'}}]\"\r\n     routerLinkActive #myFriends=\"routerLinkActive\" [active]=\"myFriends.isActive\">My friends</a>\r\n  <a mat-tab-link [routerLink]=\"[{outlets: {profilenav: 'mygames'}}]\"\r\n     routerLinkActive #myQuizzes=\"routerLinkActive\" [active]=\"myQuizzes.isActive\">My Quizzes</a>\r\n  <a mat-tab-link [routerLink]=\"[{outlets: {profilenav: 'favorite'}}]\"\r\n     routerLinkActive #favorite=\"routerLinkActive\" [active]=\"favorite.isActive\">Favorite</a>\r\n</nav>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {ShareIdService} from \"../service/profileService/share-id.service\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  private subscription: Subscription;\r\n  id: string;\r\n  constructor(private activateRoute: ActivatedRoute,\r\n              private router: Router,\r\n              private shareId: ShareIdService) {\r\n    this.subscription = this.activateRoute.params.subscribe(\r\n      params => {\r\n        this.id = params.id;\r\n      }\r\n    );\r\n    this.shareId.setId(this.id);\r\n    this.router.navigate([{outlets: {profilenav: 'profinfo'}}]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"center start\" >\r\n  <div id=\"leftbar\" fxFlex=\"20\">\r\n    <app-left-bar></app-left-bar>\r\n  </div>\r\n  <div fxFlex=\"50\">\r\n    <div id=\"navigation\">\r\n      <app-profile-navigation ></app-profile-navigation>\r\n    </div>\r\n\r\n    <router-outlet name=\"profilenav\"></router-outlet>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {User} from \"../../models/user\";\r\nimport {ProfileService} from \"../../service/profileService/profile.service\";\r\nimport {ShareIdService} from \"../../service/profileService/share-id.service\";\r\nimport {PlatformLocation} from \"@angular/common\";\r\nimport {Router} from \"@angular/router\";\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-information',\r\n  templateUrl: './user-information.component.html',\r\n  styleUrls: ['./user-information.component.css']\r\n})\r\n\r\nexport class UserInformationComponent implements OnInit {\r\n  floatLabelControl = new FormControl('auto');\r\n  public profile: User;\r\n  public isEditForm = false;\r\n  currentUserId :string;\r\n  id: string;\r\n\r\n  constructor(private profileService: ProfileService,\r\n              private shareId: ShareIdService,\r\n              private location: PlatformLocation,\r\n              private router: Router){\r\n    this.currentUserId = JSON.parse(localStorage.getItem('currentUser')).id;\r\n    this.id = shareId.shareId();\r\n    this.shareId.setEmail(JSON.parse(localStorage.getItem('currentUser')).email);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile(this.id);\r\n    this.location.onPopState(()=> {\r\n      this.shareId.setId(this.currentUserId);\r\n      this.shareId.setEmail(JSON.parse(localStorage.getItem('currentUser')).email);\r\n\r\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n        this.router.navigate(['profile', this.currentUserId, {outlets: {profilenav: 'profinfo'}}]);\r\n      });\r\n    });\r\n  }\r\n\r\n  closeEditForm() {\r\n    this.isEditForm = false;\r\n  }\r\n\r\n  ngSubmit(){\r\n    this.saveProfile();\r\n    this.closeEditForm();\r\n  }\r\n\r\n  public getProfile(id: string){\r\n    this.profileService.getProfile(id).subscribe(\r\n      (resp:any) => {\r\n        this.profile = resp;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert(\"Something wrong with downloading profile\");\r\n      }\r\n    );\r\n  }\r\n\r\n  saveProfile() {\r\n    this.profileService.updateProfile(this.profile).subscribe(\r\n      (resp:any) => {\r\n        this.profile = resp;\r\n      },\r\n      error =>{\r\n        alert(\"Something wrong while updating profile\");\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","<div *ngIf=\"!isEditForm\">\r\n  <span><p>Name: {{profile.name}}</p></span>\r\n  <p>Surname: {{profile.surname}}</p>\r\n  <p>Gender: {{profile.gender}}</p>\r\n  <p>Birthdate: {{profile.birthdate | date}}</p>\r\n  <p>City: {{profile.city}}</p>\r\n  <p>About me: {{profile.about}}</p>\r\n\r\n  <div (click)=\"isEditForm=true\">\r\n    <div>\r\n      <button mat-raised-button *ngIf=\"id==currentUserId\">Edit profile</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf=\"isEditForm\">\r\n  <form (ngSubmit)=\"ngSubmit()\">\r\n    <div>\r\n      <mat-form-field class=\"width-45\">\r\n        <mat-label>Name</mat-label>\r\n        <input name=\"name\" matInput placeholder=\"Name\" [(ngModel)]=\"profile.name\"/>\r\n      </mat-form-field>\r\n      <br>\r\n      <mat-form-field class=\"width-45\">\r\n        <mat-label>Surname</mat-label>\r\n        <input name=\"surname\" matInput placeholder=\"Name\" [(ngModel)]=\"profile.surname\"/>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <mat-radio-group [(ngModel)]=\"profile.gender\" [formControl]=\"floatLabelControl\">\r\n        <mat-label>Gender</mat-label>\r\n        <br>\r\n        <br>\r\n        <mat-radio-button  value=\"MALE\">Male</mat-radio-button>\r\n        <mat-radio-button  value=\"FEMALE\">Female</mat-radio-button>\r\n        <mat-radio-button  value=\"NOT_MENTIONED\">Not mentioned</mat-radio-button>\r\n      </mat-radio-group>\r\n      <br>\r\n\r\n\r\n      <mat-form-field class=\"width-45\">\r\n        <mat-label>Birtdate</mat-label>\r\n        <input type=\"date\" name=\"birthdate\" matInput placeholder=\"Birthdate\" [(ngModel)]=\"profile.birthdate\"/>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <mat-form-field class=\"width-45\">\r\n        <mat-label>City</mat-label>\r\n        <input name=\"city\" matInput placeholder=\"City\" [(ngModel)]=\"profile.city\"/>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n\r\n      <mat-form-field class=\"width-45\">\r\n        <mat-label>Textarea</mat-label>\r\n        <textarea matInput name=\"about\" placeholder=\"About\" [(ngModel)]=\"profile.about\"></textarea>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <button mat-raised-button type=\"submit\" class=\"width-45\">Submit</button>\r\n\r\n    </div>\r\n  </form>\r\n  <br>\r\n  <button mat-raised-button (click)=\"closeEditForm()\" class=\"width-45\">Cancel</button>\r\n</div>\r\n\r\n","import { Validators } from '@angular/forms';\r\nimport { SequenceAnswerComponent } from './../sequence-answer/sequence-answer.component';\r\nimport { StringAnswerComponent } from './../string-answer/string-answer.component';\r\nimport { BooleanAnswerComponent } from './../boolean-answer/boolean-answer.component';\r\nimport { OptionalAnswerComponent } from './../optional-answer/optional-answer.component';\r\nimport { AnswerComponent } from './../answer/answer.component';\r\nimport { QuestionService } from './../service/questionService/question.service';\r\nimport { Question, QuestionType } from './../models/question.model';\r\nimport { Component, OnInit, ComponentFactoryResolver, ViewChild, ViewContainerRef, AfterViewInit, ComponentRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ImageUploadComponent } from '../image-upload/image-upload.component';\r\nimport { map, mergeMap, defaultIfEmpty } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { TitleCasePipe } from '@angular/common';\r\n\r\ninterface QuestionTypeValue {\r\n  value: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent implements OnInit, AfterViewInit {\r\n  quizId: number;\r\n  submitted: boolean = false;\r\n  send: boolean = false;\r\n\r\n  questionForm: FormGroup;\r\n  questionTypes: QuestionTypeValue[] = [];\r\n  componentRef: ComponentRef<AnswerComponent>\r\n\r\n  question: Question = {\r\n    id: null,\r\n    quizId: null,\r\n    type: QuestionType.OPTION,\r\n    text: \"\",\r\n    active: true\r\n  };\r\n  image: File = null;\r\n\r\n  @ViewChild('dynamicComponent', { read: ViewContainerRef }) answerHost;\r\n  @ViewChild(AnswerComponent) answerComponent: AnswerComponent;\r\n  @ViewChild(ImageUploadComponent) imageComponent: ImageUploadComponent;\r\n\r\n  constructor(public questionService: QuestionService,\r\n    private formBuilder: FormBuilder,\r\n    private componentFactoryResolver: ComponentFactoryResolver) {\r\n    Object.keys(QuestionType).forEach(\r\n      value => this.questionTypes.push({ value })\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.questionForm = this.formBuilder.group({\r\n      text: [this.question.text, [Validators.required, Validators.maxLength(360)]],\r\n      type: [this.question.type]\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.loadComponent(QuestionType.OPTION.toString());\r\n  }\r\n\r\n  loadComponent(value: String) {\r\n    var componentFactory\r\n    switch (value) {\r\n      case QuestionType.OPTION:\r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(OptionalAnswerComponent);\r\n        break;\r\n      case QuestionType.BOOLEAN:\r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(BooleanAnswerComponent);\r\n        break;\r\n      case QuestionType.ANSWER:\r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(StringAnswerComponent);\r\n        break;\r\n      case QuestionType.SEQUENCE:\r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(SequenceAnswerComponent);\r\n        break;\r\n    }\r\n\r\n    this.answerHost.clear();\r\n    this.componentRef = this.answerHost.createComponent(componentFactory);\r\n    this.componentRef.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  isValid(): boolean {\r\n    this.submitted = true;\r\n    this.questionForm.markAsTouched();\r\n    return this.questionForm.valid && this.componentRef.instance.isValid();\r\n  }\r\n\r\n  save(): Observable<any> {\r\n    if (this.questionForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.submitted = true;\r\n    let answer = this.componentRef.instance;\r\n    if (answer.isValid()) {\r\n      this.getData();\r\n\r\n      return this.questionService.postQuestion(this.question).pipe(\r\n        map(result => {\r\n          this.question.id = result.id;\r\n          answer.questionId = result.id;\r\n          return this.question;\r\n        }),\r\n        mergeMap(\r\n          question => {\r\n            if (this.image != null) {\r\n              return this.questionService.updateImage(question.id, this.image);\r\n            }\r\n            return of(null)\r\n          }\r\n        ),\r\n        defaultIfEmpty(),\r\n        mergeMap(() =>\r\n          this.componentRef.instance.save()\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  getData(): void {\r\n    this.question.quizId = this.quizId;\r\n    this.question.type = this.question.type.toUpperCase();\r\n    this.question.text = this.questionForm.get('text').value;\r\n    this.question.type = this.questionForm.get('type').value.value.toUpperCase();\r\n\r\n    if (this.imageComponent.selectedFile != null)\r\n      this.image = this.imageComponent.selectedFile.file;\r\n  }\r\n\r\n  onOptionSelected(value: QuestionTypeValue) {\r\n    this.loadComponent(new TitleCasePipe().transform(value.value));\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <form [formGroup]=\"questionForm\">\r\n        <mat-form-field class=\"form-field\">\r\n            <mat-label>Description</mat-label>\r\n            <textarea matInput id=\"text\" type=\"text\" formControlName=\"text\" class=\"form-control\" maxlength=\"360\"\r\n                required></textarea>\r\n            <mat-error\r\n                *ngIf=\"questionForm.get('text').errors?.required && (submitted ||questionForm.get('text').touched || questionForm.get('text').dirty)\"\r\n                class=\"alert alert-danger\">Question\r\n                cannot be empty. </mat-error>\r\n            <mat-error *ngIf=\"questionForm.get('text').errors?.maxlength\" class=\"alert alert-danger\">Question can be max\r\n                30 characters long.</mat-error>\r\n        </mat-form-field>\r\n        <app-image-upload> </app-image-upload>\r\n\r\n        <mat-form-field class=\"form-field\">\r\n            <mat-label>Answer type</mat-label>\r\n            <mat-select id=\"type\" formControlName=\"type\" class=\"form-control\"\r\n                (selectionChange)=\"onOptionSelected($event.value)\">\r\n                <mat-option *ngFor='let type of questionTypes' [value]=\"type\">\r\n                    {{type.value | titlecase}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <h3>Answers</h3>\r\n        <ng-template #dynamicComponent></ng-template>\r\n    </form>\r\n</div>","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'app-quiz-dialog',\r\n  templateUrl: './quiz-dialog.component.html',\r\n  styleUrls: ['./quiz-dialog.component.css']\r\n})\r\nexport class QuizDialogComponent {\r\n\r\n  constructor(/*public dialogRef: MatDialogRef<QuizDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: DialogData*/) {\r\n  }\r\n\r\n/*  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }*/\r\n}\r\n","<p>quiz-dialog works!</p>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Quiz} from \"../models/quiz\";\r\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\r\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\r\nimport {QuizService} from \"../service/quizService/quiz.service\";\r\nimport {CurrentUserService} from \"../service/current-user.service\";\r\n\r\n@Component({\r\n  selector: 'app-quiz',\r\n  templateUrl: './quiz.component.html',\r\n  styleUrls: ['./quiz.component.css']\r\n})\r\nexport class QuizComponent implements OnInit {\r\n  @Input()\r\n  quizData: Quiz;\r\n  quizImage : SafeResourceUrl;\r\n\r\n  constructor(private sanitizer: DomSanitizer,\r\n              public authenticationService: AuthenticationService,\r\n              private quizService: QuizService,\r\n              private currentUserService: CurrentUserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.quizImage = this.sanitizer.bypassSecurityTrustResourceUrl('data:image/png;base64,' + this.quizData.image);\r\n  }\r\n\r\n  markQuizAsFavorite(): void{\r\n    this.quizService.markQuizAsFavorite(this.quizData.id, (this.currentUserService.getCurrentUser().id)).subscribe(\r\n      resp =>{\r\n        this.quizData.favorite = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  unmarkQuizAsFavorite(): void{\r\n    this.quizService.unmarkQuizAsFavorite(this.quizData.id, (this.currentUserService.getCurrentUser().id)).subscribe(\r\n      resp =>{\r\n        this.quizData.favorite = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<mat-card class=\"card\">\r\n  <mat-card-header class=\"head\">\r\n    <mat-card-title>{{quizData.name}}</mat-card-title>\r\n    <mat-card-subtitle>Category: {{quizData.category}}</mat-card-subtitle>\r\n    <div *ngIf=\"authenticationService.logIn\">\r\n      <button mat-icon-button *ngIf=\"quizData.favorite\" (click)=\"unmarkQuizAsFavorite()\">\r\n        <mat-icon>star</mat-icon>\r\n      </button>\r\n      <button mat-icon-button *ngIf=\"!quizData.favorite\" (click)=\"markQuizAsFavorite()\">\r\n        <mat-icon>star_border</mat-icon>\r\n      </button>\r\n    </div>\r\n  </mat-card-header>\r\n  <img mat-card-image class=\"image\" [src] = quizImage>\r\n  <mat-card-content>\r\n    <mat-chip-list>\r\n      <mat-chip *ngFor=\"let tag of quizData.tags\">{{tag}}</mat-chip>\r\n    </mat-chip-list>\r\n  </mat-card-content>\r\n  <mat-card-actions >\r\n    <button id=\"openButton\" [disableRipple]=\"true\"  mat-button>OPEN</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Category} from \"../models/category.model\";\r\nimport {CategoryService} from \"../service/categoryService/category.service\";\r\nimport {Quiz} from \"../models/quiz\";\r\nimport {QuizService} from \"../service/quizService/quiz.service\";\r\nimport {Subject} from \"rxjs\";\r\nimport {debounceTime, distinctUntilChanged} from \"rxjs/operators\";\r\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-quizzes-page',\r\n  templateUrl: './quizzes-page.component.html',\r\n  styleUrls: ['./quizzes-page.component.css']\r\n})\r\nexport class QuizzesPageComponent implements OnInit {\r\n  categories: Category[];\r\n  quizzes: Quiz[];\r\n  recommendationQuizzes: Quiz[];\r\n\r\n  length = 0;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  pageSizeOptions: number[] = [10, 20, 30, 40, 50];\r\n  currentQuizCategory: number;\r\n  recommendationLimit: number = 20;\r\n\r\n  public userRequest: string;\r\n  userQuestionUpdate = new Subject<string>();\r\n\r\n  constructor(private categoryService: CategoryService,\r\n              private quizService: QuizService,\r\n              public authService: AuthenticationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.categoryService.getCategories().subscribe(\r\n      resp => this.categories = resp\r\n    );\r\n    this.setPaginationParamDefault();\r\n    this.getAllQuizzes();\r\n\r\n    this.authService.logIn ? this.getRecommendationForAuthUser(): this.getRecommendationForAnonimus();\r\n\r\n    this.userQuestionUpdate.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged())\r\n      .subscribe(userSearch => {\r\n        this.setPaginationParamDefault();\r\n        userSearch.length ==0 ? this.getAllQuizzes() : this.filterRequest(userSearch);\r\n      });\r\n  }\r\n\r\n  filterRequest(filterText: string) {\r\n    this.quizService.getFilteredQuizzes(filterText, this.pageSize, this.pageIndex).subscribe(\r\n      resp => {\r\n        this.quizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n  onPageChanged(e) {\r\n    this.pageIndex = e.pageIndex;\r\n    this.pageSize = e.pageSize;\r\n    if (this.currentQuizCategory != undefined) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.searchByCategory(this.currentQuizCategory);\r\n    } else if (this.userRequest != undefined && this.userRequest) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.filterRequest(this.userRequest);\r\n    } else {\r\n      this.getAllQuizzes();\r\n    }\r\n  }\r\n\r\n  setPaginationParamDefault() {\r\n    this.pageIndex = 0;\r\n    this.pageSize = 10;\r\n  }\r\n\r\n  getAllQuizzes() {\r\n    this.quizService.getQuizzes(this.pageSize, this.pageIndex).subscribe(\r\n      resp => {\r\n        this.currentQuizCategory = undefined;\r\n        this.quizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  searchByCategory(categoryid: number) {\r\n    this.quizService.getQuizzesByCategory(categoryid, this.pageSize, this.pageIndex).subscribe(\r\n      resp => {\r\n        this.quizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n  setCurrentCategory(categoryId: number) {\r\n    this.currentQuizCategory = categoryId;\r\n  }\r\n\r\n  getRecommendationForAuthUser() {\r\n    this.quizService.getRecommendedQuizzes(this.recommendationLimit).subscribe(\r\n      resp => {\r\n        this.recommendationQuizzes = resp;\r\n      });\r\n  }\r\n\r\n  getRecommendationForAnonimus() {\r\n    this.quizService.RecommendationForAnonimus(this.recommendationLimit).subscribe(\r\n      resp => {\r\n        this.recommendationQuizzes = resp;\r\n      });\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\">\r\n  <div fxFlex=\"15\">\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button routerLink=\"/new_quiz\">Create Quiz</button>\r\n    <mat-divider></mat-divider>\r\n    <h3 align=\"center\"><b>Categories</b></h3>\r\n    <button mat-raised-button (click)=\"setPaginationParamDefault(); getAllQuizzes();\">All</button>\r\n    <mat-selection-list>\r\n      <mat-list *ngFor=\"let category of categories\">\r\n        <mat-list-item>\r\n          <button mat-raised-button\r\n                  (click)=\"setPaginationParamDefault(); setCurrentCategory(category.id); onPageChanged($event); \">{{category.name}}</button>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </mat-selection-list>\r\n  </div>\r\n  <div #maincontent fxFlex=\"71\" class=\"scroll\">\r\n    <div>\r\n      <mat-form-field class=\"input-form\">\r\n        <mat-label>Search quiz</mat-label>\r\n        <input matInput type=\"search\" placeholder=\"Search\" value=\"\" [(ngModel)]=\"userRequest\"\r\n               (ngModelChange)=\"this.userQuestionUpdate.next($event)\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row wrap\">\r\n      <div *ngFor=\"let quiz of quizzes\" fxLayout=\"row wrap\">\r\n        <app-quiz [quizData]=\"quiz\">\r\n        </app-quiz>\r\n      </div>\r\n    </div>\r\n    <mat-paginator [pageIndex]=\"pageIndex\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n                   (page)=\"onPageChanged($event); maincontent.scrollTop = 0;\">\r\n    </mat-paginator>\r\n  </div>\r\n  <div fxFlex=\"14\">\r\n    <h3 id=\"recommended\" align=\"center\"><b>Recommended for you</b></h3>\r\n    <div class=\"scroll\">\r\n      <div *ngFor=\"let recomendedQuiz of recommendationQuizzes\" fxLayout=\"row wrap\">\r\n        <app-quiz [quizData]=\"recomendedQuiz\">\r\n        </app-quiz>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {RegistrationService} from \"../service/registrationService/registration.service\";\r\nimport {User} from \"../models/user\";\r\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n\r\n  model:User = {\r\n    image: undefined, notificationStatus: undefined,\r\n    about: \"\",\r\n    birthdate: undefined,\r\n    city: \"\",\r\n    countryId: \"\",\r\n    gender: undefined,\r\n    name: \"\",\r\n    rating: \"\",\r\n    role: undefined,\r\n    surname: \"\",\r\n    id:null,\r\n    email:'',\r\n    password:''\r\n  };\r\n\r\n\r\n\r\n  constructor(\r\n    private router : Router,\r\n    public service : RegistrationService,\r\n    public authService: AuthenticationService,\r\n    private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(8)]],   ///(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\")\r\n      confirmPassword: ['', Validators.required]\r\n    }, {\r\n      validator: MustMatch('password', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    let input: User = JSON.parse(JSON.stringify(this.registerForm.value));\r\n    this.model.email = input.email;\r\n    this.model.password = input.password;\r\n    this.register();\r\n  }\r\n\r\n\r\n  register(): void{\r\n    this.service.postRegisterInfo(this.model).subscribe(\r\n      res =>{\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n          this.router.navigate(['/']);\r\n        });\r\n        alert(\"You registered\");\r\n      },\r\n      error => {\r\n        alert(error.error['message']);\r\n      }\r\n    );\r\n  }\r\n\r\n  get f() { return this.registerForm.controls; }\r\n}\r\n\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n  return (formGroup: FormGroup) => {\r\n    const control = formGroup.controls[controlName];\r\n    const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n      return;\r\n    }\r\n\r\n    if (control.value !== matchingControl.value) {\r\n      matchingControl.setErrors({ mustMatch: true });\r\n    } else {\r\n      matchingControl.setErrors(null);\r\n    }\r\n  }\r\n}\r\n\r\n","<div fxLayout=\"row\" class >\r\n  <div fxFlex=\"30\"></div>\r\n  <div fxFlex=\"center center\">\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!authService.logIn\" >\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input  matInput formControlName=\"email\"  placeholder=\"Email\" name=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\r\n        <mat-error *ngIf=\"f.email.errors.required\">Email is required</mat-error>\r\n        <mat-error *ngIf=\"f.email.errors.email\">Email must be a valid email address</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input type=\"password\"  matInput formControlName=\"password\"  placeholder=\"Password\"  name=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" required/>\r\n        <mat-error *ngIf=\"f.password.errors.required\">Password is require</mat-error>\r\n        <mat-error *ngIf=\"f.password.errors.pattern\">Must contain at least 8 or more characters</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input type=\"password\"  matInput  placeholder=\"Password\" formControlName=\"confirmPassword\"  name=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n        <mat-error *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</mat-error>\r\n        <mat-error *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <button mat-raised-button type=\"submit\">Register</button>\r\n      <div *ngIf=\"authService.logIn\">\r\n        <p>For registration you must be not logged in</p>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div fxFlex=\"30\"></div>\r\n</div>\r\n\r\n\r\n","import { Observable, forkJoin } from 'rxjs';\r\nimport { AnswerService } from './../service/answerService/answer.service';\r\nimport { ImageUploadComponent } from './../image-upload/image-upload.component';\r\nimport { Validators, FormControl, FormGroup, FormArray, FormBuilder } from '@angular/forms';\r\nimport { AnswerComponent, SequenceValidator } from './../answer/answer.component';\r\nimport { Component, OnInit, ViewChildren, QueryList } from '@angular/core';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-sequence-answer',\r\n  templateUrl: './sequence-answer.component.html',\r\n  styleUrls: ['./sequence-answer.component.css']\r\n})\r\nexport class SequenceAnswerComponent extends AnswerComponent implements OnInit {\r\n  @ViewChildren(ImageUploadComponent) imageComponents!: QueryList<ImageUploadComponent>;\r\n\r\n  answerForm: FormGroup;\r\n  items: FormArray;\r\n\r\n  maxAnswer = 4;\r\n  minRequired = 2;\r\n\r\n  service: AnswerService;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    answerService: AnswerService) {\r\n    super(answerService);\r\n    this.service = answerService;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.answerForm = new FormGroup({\r\n      items: this.formBuilder.array([])\r\n    });\r\n    this.items = this.answerForm.get('items') as FormArray;\r\n    for (var _i = 0; _i < this.maxAnswer; _i++) {\r\n      this.answer.push({\r\n        id: null,\r\n        questionId: 0,\r\n        text: \"\",\r\n        correct: true,\r\n        nextAnswerId: null\r\n      });\r\n      let formControl = new FormControl(this.answer[_i].text, []);\r\n      if (_i < this.minRequired) {\r\n        formControl.setValidators([Validators.required, Validators.maxLength(30)]);\r\n      }\r\n      this.items = this.answerForm.get('items') as FormArray;\r\n      this.items.push(\r\n        this.formBuilder.group({\r\n          text: formControl\r\n        })\r\n      )\r\n    }\r\n    this.answerForm.get('items').setValidators([SequenceValidator()]);\r\n  }\r\n\r\n  isValid(): boolean {\r\n    this.submitted = true;\r\n    this.items.setValidators(SequenceValidator());\r\n    return this.answerForm.valid;\r\n  }\r\n\r\n  save(): Observable<any> {\r\n    this.submitted = true;\r\n    this.getData();\r\n    this.getImages();\r\n\r\n    return this.saveAnswers().pipe(\r\n      mergeMap(\r\n        () =>\r\n          this.updateAnswers()\r\n      ),\r\n      mergeMap(\r\n        () =>\r\n          this.saveImages()\r\n      )\r\n    );\r\n  }\r\n\r\n  getData(): void {\r\n    for (var i = 0; i < this.answer.length; i++) {\r\n\r\n      this.answer[i].text = (this.answerForm.get('items') as FormArray).at(i).get(\"text\").value;\r\n\r\n      if (this.answer[i].text === \"\" || this.answer[i].text == null)\r\n        break;\r\n\r\n      this.answer[i].questionId = this.questionId;\r\n    }\r\n  }\r\n\r\n  getImages(): void {\r\n    this.imageComponents.forEach(image => {\r\n      if (image.selectedFile != null) {\r\n        this.images.push(image.selectedFile.file);\r\n      } else {\r\n        this.images.push(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateAnswers(): Observable<any> {\r\n    let observableBatch = [];\r\n    for (var i = 0; i < this.answer.length - 1; i++) {\r\n      if (this.answer[i + 1].text == null || this.answer[i + 1].text === \"\") {\r\n        break;\r\n      }\r\n      this.answer[i].nextAnswerId = this.answer[i + 1].id;\r\n      observableBatch.push(this.service.updateAnswer(this.answer[i]));\r\n    }\r\n    return forkJoin(observableBatch);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <form [formGroup]=\"answerForm\">\r\n        <ol formArrayName=\"items\">\r\n            <li *ngFor=\"let item of items.controls; let i=index\">\r\n                <div [formGroupName]=\"i\">\r\n                    <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n                        <mat-label>Enter answer name</mat-label>\r\n                        <input matInput class=\"form-control\" placeholder=\"Answer\" formControlName=\"text\">\r\n                        <mat-error\r\n                            *ngIf=\"items.controls[i].get('text').errors?.required && (submitted || items.controls[i].get('text').touched || items.controls[i].get('text').dirty)\"\r\n                            class=\"alert alert-danger\">Should have at\r\n                            least two answers.\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"items.controls[i].get('text').errors?.maxlength\" class=\"alert alert-danger\">\r\n                            Answer\r\n                            can be max 30 characters long. </mat-error>\r\n                        <mat-error *ngIf=\"items.controls[i].errors?.mustExist\" class=\"alert alert-danger\">Add text. Next\r\n                            answer is not empty. </mat-error>\r\n                    </mat-form-field>\r\n                    <app-image-upload></app-image-upload>\r\n                    <hr *ngIf=\"i!=items.controls.length-1\" class=\"my-4\">\r\n                </div>\r\n            </li>\r\n        </ol>\r\n    </form>\r\n</div>","import { Achievement } from '../../models/achievement.model';\r\nimport { Category } from '../../models/category.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AchievementsService {\r\n  private BASE_URL = window['configureApiBaseUrl'];\r\n  private GET_ACHIEVEMENTS = `${this.BASE_URL}\\\\achievements`;\r\n  private GET_ACHIEVEMENT_CATEGORIES = `${this.BASE_URL}\\\\achievements\\\\categories`;\r\n  private GET_ACHIEVEMENTS_BY_CATEGORY = `${this.BASE_URL}\\\\achievements\\\\by_category\\\\`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAchievements(): Observable<Achievement[]> {\r\n    return this.http.get<Achievement[]>(this.GET_ACHIEVEMENTS);\r\n  }\r\n\r\n  getAchievementCategories(): Observable<Category[]> {\r\n    return this.http.get<Category[]>(this.GET_ACHIEVEMENT_CATEGORIES);\r\n  }\r\n\r\n  getAchievementsByCategory(categoryId: number): Observable<Achievement[]> {\r\n    return this.http.get<Achievement[]>(this.GET_ACHIEVEMENTS_BY_CATEGORY + categoryId);\r\n  }\r\n\r\n  getAchievementsByUser(userId: number): Observable<Achievement[]> {\r\n    return this.http.get<Achievement[]>(this.GET_ACHIEVEMENTS + `\\\\` + userId);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Answer } from 'src/app/models/answer.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnswerService {\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private NEW_ANSWER_URL = `${this.BASE_URL}\\\\quiz\\\\answer\\\\new`;\r\n  private UPDATE_ANSWER_URL = `${this.BASE_URL}\\\\quiz\\\\answer\\\\update`;\r\n  private UPDATE_ANSWER_IMAGE = `${this.BASE_URL}\\\\quiz\\\\answer\\\\new_image\\\\`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postAnswer(answer: Answer): Observable<Answer> {\r\n    return this.http.post<Answer>(this.NEW_ANSWER_URL, answer);\r\n  }\r\n\r\n  updateImage(answerId: number, image: File): Observable<any> {\r\n    const uploadImg = new FormData();\r\n    uploadImg.append('image', image);\r\n    return this.http.post(this.UPDATE_ANSWER_IMAGE + answerId, uploadImg);\r\n  }\r\n\r\n  updateAnswer(answer: Answer): Observable<any> {\r\n    return this.http.post<Answer>(this.UPDATE_ANSWER_URL, answer);\r\n  }\r\n}\r\n","import { Category } from './../../models/category.model';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private CATEGORIES_URL = `${this.BASE_URL}\\\\categories`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCategories(): Observable<any> {\r\n    return this.http.get<Category[]>(this.CATEGORIES_URL);\r\n  }\r\n\r\n  getCategoryByName(name: String) {\r\n    return this.http.get(`${this.CATEGORIES_URL}\\\\${name}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrentUserService {\r\n\r\n  constructor() { }\r\n  getCurrentUser(){\r\n    return JSON.parse(localStorage.getItem('currentUser'));\r\n  }\r\n}\r\n","import { Quiz } from './../../models/quiz.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n  private BASE_URL = window['configureApiBaseUrl'];\r\n  private TOP_QUIZZES = `${this.BASE_URL}\\\\quizzes\\\\top_quizzes`;\r\n  private RECENT_QUIZZES = `${this.BASE_URL}\\\\quizzes\\\\recent_quizzes`;\r\n  private GET_RATING = `${this.BASE_URL}\\\\api\\\\users\\\\rating\\\\`;\r\n  private GET_ACHIEVEMENTS_TOTAL = `${this.BASE_URL}\\\\achievements\\\\count_total`;\r\n  private GET_ACHIEVEMENTS_FOR_USER = `${this.BASE_URL}\\\\achievements\\\\count\\\\`;\r\n  private GET_RECOMMENDATIONS = `${this.BASE_URL}\\\\quizzes\\\\recommendations\\\\`;\r\n  private GET_QUIZ_IMAGE = `${this.BASE_URL}\\\\quizzes\\\\get_image\\\\`;\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTopQuizzes(limit: number): Observable<Quiz[]> {\r\n    return this.http.get<Quiz[]>(this.TOP_QUIZZES + \"?limit=\" + limit);\r\n  }\r\n\r\n  getTopQuizzesByCategory(categoryId: number, limit: number): Observable<Quiz[]> {\r\n    return this.http.get<Quiz[]>(this.TOP_QUIZZES + `\\\\` + categoryId + \"?limit=\" + limit);\r\n  }\r\n\r\n  getRecentQuizzes(userId: number, limit: number): Observable<Quiz[]> {\r\n    return this.http.get<Quiz[]>(this.RECENT_QUIZZES + `\\\\` + userId + \"?limit=\" + limit);\r\n  }\r\n\r\n  getRating(userId: Number): Observable<number> {\r\n    return this.http.get<number>(this.GET_RATING + userId);\r\n  }\r\n\r\n  getAchievementsTotal(): Observable<number> {\r\n    return this.http.get<number>(this.GET_ACHIEVEMENTS_TOTAL);\r\n  }\r\n\r\n  getAchievementsForUser(userId: number): Observable<number> {\r\n    return this.http.get<number>(this.GET_ACHIEVEMENTS_FOR_USER + userId);\r\n  }\r\n\r\n  getRecommendations(userId: number, limit: number): Observable<Quiz[]> {\r\n    return this.http.get<Quiz[]>(this.GET_RECOMMENDATIONS + userId + \"?limit=\" + limit);\r\n  }\r\n\r\n  getQuizImage(quizId: number): Observable<any> {\r\n    return this.http.get<any>(this.GET_QUIZ_IMAGE + quizId);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {ShareIdService} from '../profileService/share-id.service';\r\nimport {CurrentUserService} from \"../current-user.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private LOGIN_API_URL = `${this.BASE_URL}\\\\auth\\\\login`;\r\n\r\n  constructor(private http: HttpClient,\r\n              private router: Router,\r\n              private shareId: ShareIdService,\r\n              private currentUserService: CurrentUserService) { }\r\n\r\n  login(email: string, password: string) {\r\n\r\n\r\n    this.http.post(this.LOGIN_API_URL, {email, password})\r\n        .subscribe((resp: any) => {\r\n              localStorage.setItem('currentUser', JSON.stringify(resp));\r\n              this.shareId.setId(JSON.parse(localStorage.getItem('currentUser')).id);\r\n              window.location.replace('/');\r\n            },\r\n            error => {\r\n              alert(error.error['message']);\r\n            });\r\n\r\n  }\r\n\r\n\r\n  logout() {\r\n    localStorage.removeItem('currentUser');\r\n    window.location.replace('/');\r\n  }\r\n\r\n  public get logIn(): boolean {\r\n    return (localStorage.getItem('currentUser') != null);\r\n  }\r\n\r\n}\r\n","import { Quiz } from './../../models/add-quiz.model';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NewQuizService {\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private NEW_QUIZ_URL = `${this.BASE_URL}\\\\quizzes\\\\new_quiz`;\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postQuiz(quiz: Quiz): Observable<Quiz> {\r\n    return this.http.post<Quiz>(this.NEW_QUIZ_URL, quiz);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from '../../models/user';\r\nimport {Quiz} from '../../models/quiz';\r\nimport {NotificationStatus} from '../../models/notification-status.enum';\r\nimport {CurrentUserService} from \"../current-user.service\";\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n  private BASE_URL = window['configureApiBaseUrl'];\r\n  private PROFILE_URL = `${this.BASE_URL}\\\\profile\\\\myprofile\\\\`;\r\n  private FRIEND_LIST_URL = `${this.BASE_URL}\\\\profile\\\\myfriends\\\\`;\r\n  private UPDATE_PROFILE_URL = `${this.BASE_URL}\\\\profile\\\\myprofile\\\\update`;\r\n  private UPDATE_PASSWORD_URL = `${this.BASE_URL}\\\\profile\\\\updatePassword\\\\`;\r\n  private GET_QUIZZES_URL = `${this.BASE_URL}\\\\profile\\\\myquizzes\\\\`;\r\n  private GET_FAVORITE_URL = `${this.BASE_URL}\\\\profile\\\\myfavorite\\\\`;\r\n  private GET_CATEGORY_NAME = `${this.BASE_URL}\\\\profile\\\\category\\\\`;\r\n  private UPDATE_USER_IMAGE = `${this.BASE_URL}\\\\profile\\\\newicon\\\\`;\r\n  private GET_USER_IMAGE_BY_USER_ID = `${this.BASE_URL}\\\\profile\\\\getimage\\\\`;\r\n  private UPDATE_GET_NOTIFICATION = `${this.BASE_URL}\\\\profile\\\\status\\\\`;\r\n  private userId = this.currentUserService.getCurrentUser().id;\r\n\r\n  constructor(private http: HttpClient,\r\n              private currentUserService: CurrentUserService) { }\r\n\r\n  getProfile(userId: string): Observable<User> {\r\n    return this.http.get<User>(this.PROFILE_URL + userId);\r\n  }\r\n\r\n  updateProfile(user: User): Observable<User> {\r\n    user.id = this.userId;\r\n    return this.http.post<User>(this.UPDATE_PROFILE_URL, user);\r\n  }\r\n\r\n  updatePassword(newPassword: string): Observable<any> {\r\n    return this.http.post(this.UPDATE_PASSWORD_URL + this.userId, newPassword);\r\n  }\r\n\r\n  getFriends(pageSize: number, pageNumber: number, sortDirection: any): Observable<any>{\r\n    return this.http.get<User[]>(this.FRIEND_LIST_URL + pageSize + '/' + pageNumber + '/' + this.userId + '?sort=' + (sortDirection==undefined? \"\": sortDirection.active + ' ' + sortDirection.direction));  //active direction\r\n  }\r\n\r\n  getUserQuizzes(pageSize: number, pageNumber: number, sortDirection: any): Observable<any>{\r\n    return this.http.get<Quiz[]>(this.GET_QUIZZES_URL + pageSize + '/' + pageNumber + '/' + this.userId +'?sort=' + (sortDirection==undefined? \"\": sortDirection.active + ' ' + sortDirection.direction));\r\n  }\r\n\r\n  getFavoriteGames(pageSize: number, pageNumber: number): Observable<any>{\r\n    return this.http.get<Quiz[]>(this.GET_FAVORITE_URL + this.userId + '/' + pageSize + '/' + pageNumber);\r\n  }\r\n\r\n  getCategoryName(categoryId: string): Observable<any> {\r\n    return this.http.get(this.GET_CATEGORY_NAME + categoryId);\r\n  }\r\n\r\n  updateImage(image: File): Observable<any> {\r\n    const uploadImg = new FormData();\r\n    uploadImg.append('image', image);\r\n    return this.http.post(this.UPDATE_USER_IMAGE + this.userId, uploadImg);\r\n  }\r\n\r\n  getProfileImage(id: string): Observable<any> {\r\n    return this.http.get(this.GET_USER_IMAGE_BY_USER_ID + id);\r\n  }\r\n\r\n  updateNotificationStatus(status: NotificationStatus): Observable<any> {\r\n    return this.http.post(this.UPDATE_GET_NOTIFICATION + this.userId, status);\r\n  }\r\n\r\n  getUserNotificationStatus(): Observable<NotificationStatus> {\r\n    return this.http.get<NotificationStatus>(this.UPDATE_GET_NOTIFICATION + this.userId);\r\n  }\r\n\r\n  filterFriendsRequest(userSearch: string, pageSize: number, pageIndex: number, sortDirection: any): Observable<any> {\r\n    return this.http.get(this.FRIEND_LIST_URL + userSearch + '/' + pageSize + '/' + pageIndex + '/' + this.userId +'?sort=' + (sortDirection==undefined? \"\": sortDirection.active + ' ' + sortDirection.direction));\r\n  }\r\n\r\n  filterQuizzesRequest(userSearch: string, pageSize: number, pageIndex: number, sortDirection: any): Observable<any> {\r\n    return this.http.get(this.GET_QUIZZES_URL+ userSearch + '/' + pageSize + '/' + pageIndex + '/' + this.userId +'?sort=' + (sortDirection==undefined? \"\": sortDirection.active + ' ' + sortDirection.direction));\r\n  }\r\n\r\n  filterFavoriteRequest(userSearch: string, pageSize: number, pageIndex: number): Observable<any>{\r\n    return this.http.get(this.GET_QUIZZES_URL+ userSearch + '/' + pageSize + '/' + pageIndex + '/' + this.userId);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShareIdService {\r\n  private id: string;\r\n  private email: string;\r\n  constructor() { }\r\n\r\n  public shareId(){\r\n    return this.id;\r\n  }\r\n\r\n  public setId(id: string){\r\n    this.id = id;\r\n  }\r\n\r\n  public shareEmail(){\r\n    return this.email;\r\n  }\r\n\r\n  public setEmail(email: string){\r\n    this.email = email;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Question } from 'src/app/models/question.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuestionService {\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private NEW_QUESTION_URL = `${this.BASE_URL}\\\\quiz\\\\question\\\\new`;\r\n  private UPDATE_QUESTION_IMAGE = `${this.BASE_URL}\\\\quiz\\\\question\\\\new_image\\\\`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postQuestion(question: Question): Observable<Question> {\r\n    return this.http.post<Question>(this.NEW_QUESTION_URL, question);\r\n  }\r\n\r\n  updateImage(questionId: number, image: File): Observable<any> {\r\n    const uploadImg = new FormData();\r\n    uploadImg.append('image', image);\r\n    return this.http.post(this.UPDATE_QUESTION_IMAGE + questionId, uploadImg);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Observable} from \"rxjs\";\r\nimport {Quiz} from \"../../models/quiz.model\";\r\nimport {AuthenticationService} from \"../loginService/authentication.service\";\r\nimport {CurrentUserService} from \"../current-user.service\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuizService {\r\n\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private QUIZZES_URL = `${this.BASE_URL}\\\\quizzes`;\r\n  private GET_QUIZ_BY_CATEGORY = `${this.QUIZZES_URL}\\\\categories\\\\`;\r\n  private GET_FILTERED_QUIZ = `${this.QUIZZES_URL}\\\\filter\\\\`;\r\n  private MARK_QUIZ_AS_FAVORITE = `${this.QUIZZES_URL}\\\\mark\\\\`;\r\n  private UNMARK_QUIZ_AS_FAVORITE = `${this.QUIZZES_URL}\\\\unmark\\\\`;\r\n  private GET_RECOMMENDED_QUIZZES = `${this.QUIZZES_URL}\\\\recommendations\\\\`;\r\n  private GET_POPULAR_QUIZZES = `${this.QUIZZES_URL}\\\\popular\\\\`;\r\n\r\n  constructor(private http: HttpClient,\r\n              private authService: AuthenticationService,\r\n              private currentUserService: CurrentUserService) { }\r\n\r\n  getQuizzes(pageSize: number, pageIndex: number): Observable<any> {\r\n    if (!pageIndex){ pageIndex = 0;}\r\n    return this.http.get<Quiz[]>(this.QUIZZES_URL + '/' + pageSize + '/' + pageIndex + '/' + (this.authService.logIn? this.currentUserService.getCurrentUser().id : 0));\r\n  }\r\n\r\n  getQuizById(id: number){\r\n    return this.http.get(`${this.QUIZZES_URL}\\\\${id}`);\r\n  }\r\n\r\n  getQuizzesByCategory(categoryId: number, pageSize: number, pageIndex: number): Observable<any> {\r\n    return this.http.get(this.GET_QUIZ_BY_CATEGORY + categoryId + '/' + pageSize + '/' + pageIndex + '/' + (this.authService.logIn? this.currentUserService.getCurrentUser().id : 0));\r\n  }\r\n\r\n  getFilteredQuizzes(searcText: string, pageSize: number, pageIndex: number): Observable<any> {\r\n    return this.http.get(this.GET_FILTERED_QUIZ + searcText + '/' + pageSize + '/' + pageIndex + '/' + (this.authService.logIn? this.currentUserService.getCurrentUser().id : 0));\r\n  }\r\n\r\n  markQuizAsFavorite(quizId: string, userId: string): Observable<any>{\r\n    return this.http.post(this.MARK_QUIZ_AS_FAVORITE + quizId + '/' + userId, \"\");\r\n  }\r\n\r\n  unmarkQuizAsFavorite(quizId: string, userId: string): Observable<any> {\r\n    return this.http.post(this.UNMARK_QUIZ_AS_FAVORITE + quizId + '/' + userId, \"\");\r\n  }\r\n\r\n  getRecommendedQuizzes(limit: number): Observable<any>{\r\n    return this.http.get<Quiz[]>(this.GET_RECOMMENDED_QUIZZES + this.currentUserService.getCurrentUser().id + '?limit=' + limit);\r\n  }\r\n\r\n  RecommendationForAnonimus(limit: number): Observable<any> {\r\n    return this.http.get<Quiz[]>(this.GET_POPULAR_QUIZZES + limit);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RatingService {\r\n  private BASE_URL = window['configureApiBaseUrl'];\r\n  private GET_RATING = `${this.BASE_URL}\\\\api\\\\users\\\\rating`;\r\n  private GET_RATING_IN_RANGE = `${this.BASE_URL}\\\\api\\\\users\\\\rating\\\\range\\\\`;\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRating(from: number, to: number): Observable<User[]> {\r\n    return this.http.get<User[]>(this.GET_RATING + \"?from=\" + from + \"&to=\" + to);\r\n  }\r\n\r\n  getRatingRange(userId: number, range: number): Observable<User[]> {\r\n    return this.http.get<User[]>(this.GET_RATING_IN_RANGE + userId + \"?range=\" + range);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {User} from \"../../models/user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n  private BASE_URL = window[\"configureApiBaseUrl\"];\n  private REGISTRATION_URL = `${this.BASE_URL}\\\\auth\\\\register`;\n\n  constructor(private http: HttpClient) { }\n\n  postRegisterInfo(user : User) : Observable<User> {\n    return this.http.post<User>(this.REGISTRATION_URL, user);\n  }\n\n}\n","import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Tag } from 'src/app/models/tag.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagService {\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private INSERT_TAG = `${this.BASE_URL}\\\\quizzes\\\\tags\\\\new`;\r\n  private ADD_TAG_TO_QUIZ = `${this.BASE_URL}\\\\quizzes\\\\add_tag?`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postTag(tag: Tag): Observable<Tag> {\r\n    return this.http.post<Tag>(this.INSERT_TAG, tag);\r\n  }\r\n\r\n  addTagToQuiz(quizId: number, tagId: number): Observable<any> {\r\n    return this.http.post(this.ADD_TAG_TO_QUIZ + \"quizId=\" + quizId + \"&tagId=\" + tagId, null);\r\n  }\r\n}\r\n","import { Validators } from '@angular/forms';\r\nimport { AnswerComponent } from './../answer/answer.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Answer } from '../models/answer.model';\r\nimport { AnswerService } from '../service/answerService/answer.service';\r\n\r\n@Component({\r\n  selector: 'app-string-answer',\r\n  templateUrl: './string-answer.component.html',\r\n  styleUrls: ['./string-answer.component.css']\r\n})\r\nexport class StringAnswerComponent extends AnswerComponent implements OnInit {\r\n  text: FormControl;\r\n\r\n  constructor(answerService: AnswerService) {\r\n    super(answerService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let result: Answer = {\r\n      id: null,\r\n      questionId: 0,\r\n      text: \"\",\r\n      correct: true,\r\n      nextAnswerId: null\r\n    };\r\n    this.answer.push(result);\r\n\r\n    this.text = new FormControl(\r\n      this.answer[0].text, Validators.required\r\n    );\r\n  }\r\n\r\n  isValid(): boolean {\r\n    this.submitted = true;\r\n    return this.text.valid;\r\n  }\r\n\r\n  getData(): void {\r\n    this.answer[0].questionId = this.questionId;\r\n    this.answer[0].text = this.text.value;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <mat-form-field appearance=\"outline\">\r\n        <mat-label>Enter answer</mat-label>\r\n        <input matInput class=\"form-control\" placeholder=\"Answer\" aria-label=\"Answer\" aria-describedby=\"basic-addon1\"\r\n            [formControl]=\"text\" required>\r\n        <mat-error *ngIf=\"text.invalid && (submitted ||text.dirty || text.touched)\" class=\"alert alert-danger\">\r\n            <mat-error *ngIf=\"text.errors.required\">\r\n                Answer is required.\r\n            </mat-error>\r\n        </mat-error>\r\n    </mat-form-field>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-submitted-quiz',\r\n  templateUrl: './submitted-quiz.component.html',\r\n  styleUrls: ['./submitted-quiz.component.css']\r\n})\r\nexport class SubmittedQuizComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <mat-card>\r\n        <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\r\n            <mat-icon fxFlexAlign=\"center\">done_outline</mat-icon>\r\n            <h3>Quiz successfully submitted!</h3>\r\n        </mat-card-content>\r\n        <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n            <button mat-button target=\"_blank\">Go back to profile</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}